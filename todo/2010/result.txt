% /Users/masaki-n/Desktop/Work/MPI/cafeobj_p13/cafeobj-1.4/lisp/CafeOBJ ; exit;
-- loading standard prelude
; Loading
;    /Users/masaki-n/Desktop/Work/MPI/cafeobj_p13/cafeobj-1.4/prelude/std.bin

          -- CafeOBJ system Version 1.4.8(PigNose0.99,p13) --
                   built: 2010 May 30 Sun 4:38:22 GMT
                         prelude file: std.bin
                                  ***
                      2010 Jun 2 Wed 8:36:21 GMT
                            Type ? for help
                                  ***
                  -- Containing PigNose Extensions --
                                  ---
         built on International Allegro CL Enterprise Edition
              8.2 [Mac OS X (Intel)] (May 30, 2010 13:38)
CafeOBJ> cd Desktop/Work/MPI/cafeobj_p13
/Users/masaki-n/Desktop/Work/MPI/cafeobj_p13/
CafeOBJ> in smpi.mod
processing input : /Users/masaki-n/Desktop/Work/MPI/cafeobj_p13/smpi.mod
-- defining module! VAR
-- reading in file  : bool
processing input : /Users/masaki-n/Desktop/Work/MPI/cafeobj_p13/cafeobj-1.4/lib/bool.mod
processing input : /Users/masaki-n/Desktop/Work/MPI/cafeobj_p13/cafeobj-1.4/lib/truth.mod
-- defining module! TRUTH
-- reading in file  : truth
-- done reading in file: truth
............_......* done.
-- defining module! BOOL............._......................* done.
-- done reading in file: bool
............................._* done.
-- defining module! EXP.
-- reading in file  : int
; Loading
;    /Users/masaki-n/Desktop/Work/MPI/cafeobj_p13/cafeobj-1.4/lib/int.bin
-- defining module! INT
-- reading in file  : nat
;   Loading
;      /Users/masaki-n/Desktop/Work/MPI/cafeobj_p13/cafeobj-1.4/lib/nat.bin
-- defining module! NAT
-- reading in file  : nznat
;     Loading
;        /Users/masaki-n/Desktop/Work/MPI/cafeobj_p13/cafeobj-1.4/lib/nznat.bin
-- defining module! NZNAT........_.............._.........* done.
-- done reading in file: nznat
..._................._................* done.
-- done reading in file: nat
..._................_............* done.
-- done reading in file: int
..........._* done.
-- defining module! PGM........_* done.
-- defining module! STORE......_......._........* done.
-- defining module! SEM-EXP......._...........* done.
-- defining module! SEM-PGM..........
-- reading in file  : rwl
processing input : /Users/masaki-n/Desktop/Work/MPI/cafeobj_p13/cafeobj-1.4/lib/rwl.mod
-- defining module! RWL..................................................................._........................................................* done.
-- done reading in file: rwl
_...........* done.
-- defining module! MPGM...._* done.
-- defining module! SEM-MPGM.........._..* done.
-- defining module! SMPI....._....* done.
-- defining module! TEST.._.* done.
--> (1) exec test 
-- execute in TEST : (input):List
(((((x :: na) ((pid :: 2) (np :: 3))) (send ( pid , 0 ) ;)) (((recv ( x , 0 ) ;) (if (pid = 0) { (((int x ;) (int i ;)) ((i := 1 ;) (while (np > i) { ((recv ( x , any ) ;) ((send ( x , (np - i) ) ;) (i := (i + 1) ;))) }))) })) end)) | (((((x :: na) ((pid :: 1) (np :: 3))) (recv ( x , 0 ) ;)) ((if (pid = 0) { (((int x ;) (int i ;)) ((i := 1 ;) (while (np > i) { ((recv ( x , any ) ;) ((send ( x , (np - i) ) ;) (i := (i + 1) ;))) }))) }) end)) | ((((x :: 1) ((i :: 1) ((pid :: 0) (np :: 3)))) (send ( x , (np - i) ) ;)) (((i := (i + 1) ;) (while (np > i) { ((recv ( x , any ) ;) ((send ( x , (np - i) ) ;) (i := (i + 1) ;))) })) end)))):List
(0.000 sec for parse, 228 rewrites(0.010 sec), 784 matches)
--> (2) red _==>!_ test 
--> This search should find the normal form of the above execution (1).
-- reduce in TEST : (input ==>! L):Bool

** Found [state 551] ((((x :: 2) ((pid :: 2) (np :: 3))) | ((i :: 3) ((x :: 1) ((pid :: 0) (np :: 3))))) | ((x :: 1) ((pid :: 1) (np :: 3)))):List
   { L:List |-> ((((x :: 2) ((pid :: 2) (np :: 3))) | ((i :: 3) ((x :: 1) ((pid :: 0) (np :: 3))))) | ((x :: 1) ((pid :: 1) (np :: 3)))) }

** No more possible transitions.
(true):Bool
(0.000 sec for parse, 12559 rewrites(4.140 sec), 65543 matches, 818 memo hits)
TEST> 

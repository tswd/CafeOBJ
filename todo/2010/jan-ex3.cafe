** *******file 3**********************************
** ***********************************************
** examples for checking module duplication
** ***********************************************
** line with **> shows the points to be considered
** ***********************************************

--> PAIR(X :: TRIV, Y :: TRIV)
mod! PAIR (X :: TRIV, Y :: TRIV) {
 [Pair]
 op _,_ : Elt.X Elt.Y -> Pair {constr} .
}

**> module PAIR(NAT,NAT) is duplicated and
**> there is no way to disambiguate two modules of
**> the same internal name "PAIR(X <= NAT, Y <= NAT))"
mod NAT-PP-1 {us(PAIR(PAIR(NAT,NAT),PAIR(NAT,NAT)))}
select NAT-PP-1
**> there is no way to disambiguate the term "(1,2)"
parse (1,2) .

--> 
mod NAT-PP-1' {
  pr(PAIR(PAIR(NAT,NAT),PAIR(NAT,NAT)))
}

**> module PAIR(NAT,NAT) is duplicated
mod 2-PNATNATus {
us(PAIR(NAT,NAT))
us(PAIR(NAT,NAT))
}
select 2-PNATNATus
**> there is no way to disambiguate the term "(1,2)"
parse (1,2) .

**> module PAIR(NAT,NAT) is duplicated
mod 2-PNATNATpr {
pr(PAIR(NAT,NAT))
pr(PAIR(NAT,NAT))
}
select 2-PNATNATpr
**> there is no way to disambiguate the term "(1,2)"
parse (1,2) .


-- ***************************************************
--> proof score for distributive law of _*_ over _+_
--> in peano natural numbers

--> Peano natural numbers
mod! PNAT {
 [ Nat ]
 op 0 : -> Nat {constr} .
 op s_ : Nat -> Nat {constr} .

 -- equality over the natural numbers
--  op _=_ : Nat Nat -> Bool {comm} .
 eq (X:Nat = X) = true .
 eq (0 = (s Y:Nat)) = false .
 eq ((s X:Nat) = (s Y:Nat)) = (X = Y) .
}

mod! PNAT+* {
 pr(PNAT)
 vars X Y : Nat .

 -- notice that assoc and comm of _+_ are assumed
 op _+_ : Nat Nat -> Nat {assoc comm prec: 30} .
 eq 0 + Y = Y .
 eq (s X) + Y = s(X + Y) .

 op _*_ : Nat Nat -> Nat {prec: 29 r-assoc}
 eq 0 * Y = 0 .
 eq (s X) * Y = Y + (X * Y) .
}

--> Property
-->    \forall X,Y,Z:Nat.((X + Y) * Z = X * Z + Y * Z)
-- Proof: By induction on X.
--> I Base case
--> (1)
open PNAT+* .
-- check
 red (0 + y:Nat) * z:Nat = 0 * z + y * z .
close
--> (2)
open PNAT+* .
-- check
 red (0 + y:Nat) * z:Nat = 0 * z + y * z .
close
--> II Induction case
--> (3)
open PNAT+* .
 op x : -> Nat .
-- induction hypothesis
 eq (x + y:Nat) * z:Nat = (x * z) + (y * z) .
-- check
 red ((s x) + y:Nat) * z:Nat = ((s x) * z) + (y * z) .
close
-- (4)
-- open PNAT+* .
--  op x : -> Nat .
-- -- induction hypothesis
--  eq (x + Y:Nat) * Z:Nat = (x * Z) + (Y * Z) .
-- -- check
--  red ((s x) + y:Nat) * z:Nat = ((s x) * z) + (y * z) .
-- close
--> (4)
open PNAT+* .
 op x : -> Nat .
-- induction hypothesis
 eq (x + A:Nat) * B:Nat = (x * B) + (A * B) .
-- check
 red ((s x) + y:Nat) * z:Nat = ((s x) * z) + (y * z) .
close
-- ***************************************************

From: Razvan Diaconescu <diacon@jaist.ac.jp>
Date: Sat, 6 Jun 98 12:59:54 JST
Message-Id: <9806060359.AA07396@is27e0s07.jaist.ac.jp>
To: sawada@sras75.sra.co.jp
Subject:  Re: new path.mod
Cc: kokichi@jaist.ac.jp, sawada@sra.co.jp
Content-Type: text
Content-Length: 1773

 |> What about after the reduction is finished and the normak form is
 |> obtained, when printing the sort of the reusut, if the sort is ?S then
 |> the system computes the predicate _: S and if results in true changes
 |> the sort to S.
 |
 |I think this is a good idea, but there is a big problem. 
 |I have already considered this issue when I tried the first implementation
 |of sort membership. However I did not finish this, because it requires
 |too much changes. Let me describe the reason in brief. 
 |The problem is the ambiguities of sort of terms. 
 |Assume that user declares some axioms of `_: S', if we consider `_: S'
 |for determining the sort of a term, the process is not deterministic 
 |in general. A simple term can have diffrent sorts which  are in a 
 |connected component but has no partial order relation with each other.
 |To solve this problem, we cannot assign single sort to a term, 
 |instead we must assing a set of possible sorts. Also, matching
 |should be performed in `membership' not in `order sorted'. 

I was thinking at a modest step towards MEL, just do the sort pred
evaluation only once  AT THE END. Also, you can do it in a simple way,
just `order sorted' matching but using the specification rules for
defining the sort membership. The situations with more maximal sorts
for the same connected component is rare in practice, and in this case
just print the first S which gets true for the evaluation of `_: S'.

Also, the issue of non-termination of evaluation `_: S' of should not
be considered, this is entirely  the responsability of the user (as
with the rest of the specification).

Maybe such thing can be done first with a top level switch, so that we
may just experiment with it.

What do you think about this?

Razvan


assoc や comm 等の属性に関しては後から輸入しているモジュールの方で
追加宣言できるようにするべきであるという議論が以前 Razvan との間で
あり、現在これを許しています。

	mod FOO {
	 [ Elt ]
         op _*_ : Elt Elt -> Elt { assoc }
        }

        mod BAR {
         [ Elt ]
         op _*_ : Elt Elt -> Elt { comm }
        }

上の例で、 FOO では _*_ は assoc で、BAR では assoc + comm となります。
FOO での _*_ は BAR での comm の追加宣言の影響を受けません。これらの
属性はオペレータ自体のみに属するものではなく、文脈(モジュール)にも
依存するものとされています。これは実装においても正しくそのようになって
います。

現在は、オペレータに関する以下の属性は文脈に依存しないもとのして扱われて
います。したがってこれらの属性に関して輸入元で追加宣言は無いもの、あるいは
許さないとしています。
	constructor -- constructor か否か { constr }
	precedence                        { prec: ...}
	associativity -- 構文的な結合性   { l-assoc|r-assoc}
	bhavioural -- behavioural か否か  bop, op
	coherent -- coherent か否か       { coherent }

以上は言語の定義上の話ですが、実装はこれら追加宣言を許さないものに
関するチェックがいい加減で、そのため、今回の例のようなおかしなことが
出来てしまいます。上の規定に従うのであれば、警告メッセージを出す等の
処置をとり、追加宣言を無効にするべきでしょう。これに関しては、正式
リリースの時点で対応したいと思います。

お送り頂いた例のように、coherent 属性に関しても文脈依存の属性であると
する必要があるのならば、これはそのように対応するべきですが、私はこれに
関しては今のところあまり良く分かりません。assoc や comm 等に関しては 
equality が追加されるという風に単純に理解でき、輸入された公理に関しても、
その解釈に関して問題は生じません。coherent に関してはどういう風に考え
たら良いのでしょうか？

現状では、二木さんがなさったように、using で輸入するようにして、
輸入されたモジュールに対する、誤った副作用を防止するようにして
いただければと思います。

-- sawada@sra.co.jp



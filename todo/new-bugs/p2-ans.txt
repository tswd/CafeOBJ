> |LIST(Y)> show .
> |module* LIST (Y :: TRIV)
> |{
> |  imports {
> |    protecting (TRIV+(X <= Y))
> |  }
> |}
>
> This should be:
>
> LIST(Y)> show .
> module* LIST (Y :: TRIV)
> {
>   imports {
>    protecting (TRIV+(Y))
>  }
> }
>
> How do you think?  --> Sawada-san

I think that 
  TRIV+(X <= Y)
and
  TRIV+(Y)
is just the same thing in this context w.r.t to the definition
of CafeOBJ. 
Do you mean that TRIV+(Y) should not be a instance? 
If you want a diagram

      TRIV -- X --> TRIV+ --> LIST          -- (1)

declare LIST as

      mod LIST { pr (TRIV+) ... }           -- (2)

This has been discussed with Razvan in our several previous
e-mails, and I already said in some of them, getting the 
diagram (1) by the declaration like
      mod LIST (X :: TRIV) { pr (TRIV(X)) ...} --(3)
does not works well. And (3) should be interpreted 
quite differently from (2).

-- sawada@sra.co.jp


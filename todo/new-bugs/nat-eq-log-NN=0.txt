%NAT=1> red NN:NzNat = 0 .
is-simple-ac-match-ok?, before
   _*_       
 /      \     
AC     _*_   
     /     \  
    (1)  X-ID
              

-- indep = (1)
-- dep(lst) = nil
-- dep-vars = nil
-- idep-vars = (X-ID:NzNat AC:Nat)
is-simple-ac-match-ok?, after(1 * (X-ID:NzNat * AC:Nat))
    _*_      
 /       \    
(1)     _*_  
       /    \ 
     X-ID  AC
              
-- reduce in %NAT=1 : (NN = 0):Bool
* First Match --------------------------------
 t1 = (NN1 = NN2):Bool
 t2 = (NN = 0):Bool
 unify? = nil
 one way match? = t
 0[2]: (match-decompose&merge #S(match-system :environment (nil) :system-to-solve ((((258 #<meth ((_ = _) . 2) : 10d9baa2> (:sort "Bool" (visible)) (((12545 nn1 (:bsort NzNat(v) : 10a4c2f2) nn1)) ((12545 nn2 (:bsort NzNat(v) : 10a4c2f2) nn2))))) (258 #<meth ((_ = _) . 2) : 10d9baa2> (:sort "Bool" (visible)) (((12545 nn (:bsort NzNat(v) : 10a4c2f2) nn)) ((4384 0 (:bsort Zero(v) : 10a4c292) nil))))))) nil)
insert:--------------------------------------
 new-env = empty
 test-env = empty
 t1 = (NN1 = NN2):Bool
 t2 = (NN = 0):Bool
 insert: return -- coherent -------------------
 0[2]: returned #S(match-system :environment (nil) :system-to-solve ((((258 #<meth ((_ = _) . 2) : 10d9baa2> (:sort "Bool" (visible)) (((12545 nn1 (:bsort NzNat(v) : 10a4c2f2) nn1)) ((12545 nn2 (:bsort NzNat(v) : 10a4c2f2) nn2))))) (258 #<meth ((_ = _) . 2) : 10d9baa2> (:sort "Bool" (visible)) (((12545 nn (:bsort NzNat(v) : 10a4c2f2) nn)) ((4384 0 (:bsort Zero(v) : 10a4c292) nil))))))) nil
result of match-deocmpose&merge, no-match=nil
 0[2]: (m-system-extract-one-system ((((258 #<meth ((_ = _) . 2) : 10d9baa2> (:sort "Bool" (visible)) (((12545 nn1 (:bsort NzNat(v) : 10a4c2f2) nn1)) ((12545 nn2 (:bsort NzNat(v) : 10a4c2f2) nn2))))) (258 #<meth ((_ = _) . 2) : 10d9baa2> (:sort "Bool" (visible)) (((12545 nn (:bsort NzNat(v) : 10a4c2f2) nn)) ((4384 0 (:bsort Zero(v) : 10a4c292) nil)))))))
 0[2]: returned ((((258 #<meth ((_ = _) . 2) : 10d9baa2> (:sort "Bool" (visible)) (((12545 nn1 (:bsort NzNat(v) : 10a4c2f2) nn1)) ((12545 nn2 (:bsort NzNat(v) : 10a4c2f2) nn2))))) (258 #<meth ((_ = _) . 2) : 10d9baa2> (:sort "Bool" (visible)) (((12545 nn (:bsort NzNat(v) : 10a4c2f2) nn)) ((4384 0 (:bsort Zero(v) : 10a4c292) nil)))))) #<Vector @ #x10595eda>
 extracted a system 
===========
t1 = (NN1 = NN2):Bool
t2 = (NN = 0):Bool
First match calls next-match
 old gst: 
** global state:-------------------
-----------------------------------
 next gst :
** global state:-------------------
[0]
--Match state, match-system-env : 
 lhs = !! empty term !!
 rhs = !! empty term !!
--Match state, match-system-sys : 
--Match state, sys-to-solve :
 lhs = (NN1 = NN2):Bool
 rhs = (NN = 0):Bool
-Match state, theory-info.c.[4,not empty for matching,equal:match-c-equal,
init:match-c-state-initialize,next:match-c-next-state]
-Match state, theory-state
-----------------------------------
* Next-match : global-state = 
** global state:-------------------
[0]
--Match state, match-system-env : 
 lhs = !! empty term !!
 rhs = !! empty term !!
--Match state, match-system-sys : 
--Match state, sys-to-solve :
 lhs = (NN1 = NN2):Bool
 rhs = (NN = 0):Bool
-Match state, theory-info.c.[4,not empty for matching,equal:match-c-equal,
init:match-c-state-initialize,next:match-c-next-state]
-Match state, theory-state
-----------------------------------
 0[2]: (next-match-state #S(match-state :is-new t :match-system #S(match-system :environment (nil) :system-to-solve nil) :sys-to-solve ((((258 #<meth ((_ = _) . 2) : 10d9baa2> (:sort "Bool" (visible)) (((12545 nn1 (:bsort NzNat(v) : 10a4c2f2) nn1)) ((12545 nn2 (:bsort NzNat(v) : 10a4c2f2) nn2))))) (258 #<meth ((_ = _) . 2) : 10d9baa2> (:sort "Bool" (visible)) (((12545 nn (:bsort NzNat(v) : 10a4c2f2) nn)) ((4384 0 (:bsort Zero(v) : 10a4c292) nil)))))) :theory-info #<Vector @ #x10595eda> :theory-state #<Vector @ #x10dc898a>))
   1[2]: (match-add-m-system #S(match-system :environment (nil) :system-to-solve nil) ((((12545 nn1 (:bsort NzNat(v) : 10a4c2f2) nn1)) (12545 nn (:bsort NzNat(v) : 10a4c2f2) nn)) (((12545 nn2 (:bsort NzNat(v) : 10a4c2f2) nn2)) (4384 0 (:bsort Zero(v) : 10a4c292) nil))))
insert:--------------------------------------
 new-env = empty
 test-env = empty
 t1 = NN1:NzNat
 t2 = NN:NzNat
 t1 = NN2:NzNat
 t2 = (0):Zero
-- non coherent, sort match fail.
   1[2]: returned nil t
   1[2]: (match-add-m-system #S(match-system :environment (nil) :system-to-solve nil) ((((12545 nn1 (:bsort NzNat(v) : 10a4c2f2) nn1)) (4384 0 (:bsort Zero(v) : 10a4c292) nil)) (((12545 nn2 (:bsort NzNat(v) : 10a4c2f2) nn2)) (12545 nn (:bsort NzNat(v) : 10a4c2f2) nn))))
insert:--------------------------------------
 new-env = empty
 test-env = empty
 t1 = NN1:NzNat
 t2 = (0):Zero
-- non coherent, sort match fail.
   1[2]: returned nil t
 0[2]: returned nil t
** Next-match : next-match-state returns no-more = t
* Next-match : return with no-match
* First Match --------------------------------
 t1 = (NN = 0):Bool
 t2 = (NN = 0):Bool
 unify? = nil
 one way match? = t
 0[2]: (match-decompose&merge #S(match-system :environment (nil) :system-to-solve ((((258 #<meth ((_ = _) . 2) : 10d9baa2> (:sort "Bool" (visible)) (((12545 nn (:bsort NzNat(v) : 10a4c2f2) nn)) ((4384 0 (:bsort Zero(v) : 10a4c292) nil))))) (258 #<meth ((_ = _) . 2) : 10d9baa2> (:sort "Bool" (visible)) (((12545 nn (:bsort NzNat(v) : 10a4c2f2) nn)) ((4384 0 (:bsort Zero(v) : 10a4c292) nil))))))) nil)
insert:--------------------------------------
 new-env = empty
 test-env = empty
 t1 = (NN = 0):Bool
 t2 = (NN = 0):Bool
 insert: return -- coherent -------------------
 0[2]: returned #S(match-system :environment (nil) :system-to-solve ((((258 #<meth ((_ = _) . 2) : 10d9baa2> (:sort "Bool" (visible)) (((12545 nn (:bsort NzNat(v) : 10a4c2f2) nn)) ((4384 0 (:bsort Zero(v) : 10a4c292) nil))))) (258 #<meth ((_ = _) . 2) : 10d9baa2> (:sort "Bool" (visible)) (((12545 nn (:bsort NzNat(v) : 10a4c2f2) nn)) ((4384 0 (:bsort Zero(v) : 10a4c292) nil))))))) nil
result of match-deocmpose&merge, no-match=nil
(false):Bool
(0.000 sec for parse, 1 rewrites(0.000 sec), 2 matches)

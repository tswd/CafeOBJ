先に飯田さんからレポートのあった、問題ですが、

>-- I found strange reduction related to BOOL module in
>-- CafeOBJ ver.1.4.1(p5). I attached the spec I used at
>-- the end of this email.
>
>-- First problem is that the system outputs the following warning:
>
>-- --------------------------------------------------------------------
>-- [Warning]: Ambiguous term:
>-- * Please select a term from the followings:

こっちの方はOKになったのですが、下の件については

> -- [Error] error occured while reduction in comiled code...
> -- error no valid parse for operator _==_.
> -- error no valid parse for operator _=/=_.
>    :

この件に関して、brute に送っているコードをダンプして幾つか
気が付いたことがあります。実際に出力されるエラーメッセージや
警告メッセージは全部で下のようになります。

-----------------------------------------------------------
[Error] error occured while module compilation ...
error no valid parse for operator _==_.
error no valid parse for operator _=/=_.
error no valid parse for operator _==_.
error no valid parse for operator _=/=_.
error no valid parse for operator _==_.
error no valid parse for operator _=/=_.
error no valid parse for operator _==_.
error no valid parse for operator _=/=_.
error no valid parse for operator _==_.
error no valid parse for operator _==_.
error no valid parse for operator _==_.
warning strategy conflict for operator |eating3?/1?Bool|.
warning strategy conflict for operator |eating2?/1?Bool|.
warning strategy conflict for operator |eating1?/1?Bool|.
warning strategy conflict for operator |rest3/1?Table|.
warning strategy conflict for operator |rest2/1?Table|.
warning strategy conflict for operator |rest1/1?Table|.
warning strategy conflict for operator |pick3l/1?Table|.
warning strategy conflict for operator |pick3r/1?Table|.
warning strategy conflict for operator |pick2l/1?Table|.
warning strategy conflict for operator |pick2r/1?Table|.
warning strategy conflict for operator |pick1l/1?Table|.
warning strategy conflict for operator |pick1r/1?Table|.
warning strategy conflict for operator |pick_?LeftHand|.
warning strategy conflict for operator |release_?LeftHand|.
warning strategy conflict for operator |_implies_|.
warning attribute conflict for operator |_xor_| (0 != 15).
warning strategy conflict for operator |_or-else_|.
warning attribute conflict for operator |_or_| (0 != 15).
warning strategy conflict for operator |_and-also_|.
warning attribute conflict for operator |_and_| (0 != 15).
warning strategy conflict for operator |pick_?RightHand|.
warning strategy conflict for operator |release_?RightHand|.
warning strategy conflict for operator |pick-right/1?Guest3|.
warning strategy conflict for operator |pick-left/1?Guest3|.
warning strategy conflict for operator |rest/1?Guest3|.
warning strategy conflict for operator |eating?/1?Bool|.
warning strategy conflict for operator |eating?/1?Bool|.
warning strategy conflict for operator |eating?/1?Bool|.
warning strategy conflict for operator |pick-right/1?Guest2|.
warning strategy conflict for operator |pick-left/1?Guest2|.
warning strategy conflict for operator |rest/1?Guest2|.
warning strategy conflict for operator |pick-right/1?Guest1|.
warning strategy conflict for operator |pick-left/1?Guest1|.
warning strategy conflict for operator |rest/1?Guest1|.
warning strategy conflict for operator |release_?ChopStick3|.
warning strategy conflict for operator |use_?ChopStick3|.
warning strategy conflict for operator |release_?ChopStick2|.
warning strategy conflict for operator |use_?ChopStick2|.
warning strategy conflict for operator |release_?ChopStick1|.
warning strategy conflict for operator |use_?ChopStick1|.
warning LHS won't match to any term (out-most op is |_xor_|).
warning LHS won't match to any term (out-most op is |_or_|).
warning LHS won't match to any term (out-most op is |_and_|).
--------------------------------------------------------------
まず警告の strategy conflict ですが、これはエラーオペレータの書き換え戦
略はインタプリタではすべて最内最左できめうちにしているのに対して、当然な
がら一般のオペレータではさまざまであることが原因となっているのですが、こ
のような場合bruteはどの戦略を採用するのでしょうか？ あと、ちょっと不思議
だったのが、どうして通常は出力されないんでしょう。普通のモジュールは
BOOL を輸入していますが、BOOL自体にこのような戦略の相違が含まれているは
ずなのですが、この警告は初めてみました。

それと、attribute conflict もエラーオペレータとそうでないものとの間の問
題だと思いますが、これも通常は出力されませんよね？ エラーが起きた際には
何か、警告を出力するようにするようなスイッチが入るんですか？

次に、LHS won't match to any term (out-most op is |_xor_|) については、
じっと眺めたのですがよく分かりませんでした。 

最後に
     error no valid parse for operator _==_.
の類のエラーなんですけれど、これもよく分かりませんでした。すみませんが
CafeOBJ コードとその後に、brute に送っているコードを添付しますので、
原因をみて頂けますか？ よろしくお願いします。

-- sawada@sra.co.jp

-- ========================こっから
set auto context on .

-- -------------------------------------------------------------
-- Values of SWITCH
-- -------------------------------------------------------------
mod! ON-OFF {
  [ Value ]
  ops on off : -> Value
}

-- -------------------------------------------------------------
-- SWITCH
-- -------------------------------------------------------------
mod* SWITCH {
  protecting(ON-OFF)

  *[ Switch ]*

  op init-sw : -> Switch         -- initial state
  bop on_ : Switch -> Switch     -- method
  bop off_ : Switch -> Switch    -- method
  bop status_ : Switch -> Value  -- attribute

  var S : Switch

  eq status(init-sw) = off .
  eq status(on(S)) = on .
  eq status(off(S)) = off .
}

mod* RIGHT-HAND {
  protecting(SWITCH *{ hsort Switch -> RightHand,
                       op init-sw -> init-rh,
                       bop on_ -> pick_,
                       bop off_ -> release_,
                       op on -> filled,
                       op off -> empty })
}

mod* LEFT-HAND {
  protecting(SWITCH *{ hsort Switch -> LeftHand,
                       op init-sw -> init-lh,
                       bop on_ -> pick_,
                       bop off_ -> release_,
                       op on -> filled,
                       op off -> empty })
}

mod* PHILOSOPHER {
  protecting(RIGHT-HAND + LEFT-HAND)

  *[ Phil ]*

  op init-phil : -> Phil
  bop pick-right : Phil -> Phil
  bop pick-left : Phil -> Phil
  bop rest : Phil -> Phil
  bop eating? : Phil -> Bool
  bop right-hand : Phil -> RightHand
  bop left-hand : Phil -> LeftHand

  var P : Phil

  eq eating?(P) = (status(right-hand(P)) == filled) and
                  (status(left-hand(P)) == filled) .

  eq right-hand(init-phil) = init-rh .
  eq right-hand(pick-right(P)) = pick(right-hand(P)) .
  eq right-hand(pick-left(P)) = right-hand(P) .
  eq right-hand(rest(P)) = release(right-hand(P)) .

  eq left-hand(init-phil) = init-lh .
  eq left-hand(pick-right(P)) = left-hand(P) .
  eq left-hand(pick-left(P)) = pick(left-hand(P)) .
  eq left-hand(rest(P)) = release(left-hand(P)) .
}

mod* GUEST1 {
  protecting(PHILOSOPHER *{ hsort Phil -> Guest1,
                            op init-phil -> init-guest1 })
}

mod* GUEST2 {
  protecting(PHILOSOPHER *{ hsort Phil -> Guest2,
                            op init-phil -> init-guest2 })
}

mod* GUEST3 {
  protecting(PHILOSOPHER *{ hsort Phil -> Guest3,
                            op init-phil -> init-guest3 })
}

mod* CHOP-STICK1 {
  protecting(SWITCH *{ hsort Switch -> ChopStick1,
                       op init-sw -> init-cs1,
                       bop on_ -> use_,
                       bop off_ -> release_,
                       op on -> in-use,
                       op off -> ready })
}

mod* CHOP-STICK2 {
  protecting(SWITCH *{ hsort Switch -> ChopStick2,
                       op init-sw -> init-cs2,
                       bop on_ -> use_,
                       bop off_ -> release_,
                       op on -> in-use,
                       op off -> ready })
}

mod* CHOP-STICK3 {
  protecting(SWITCH *{ hsort Switch -> ChopStick3,
                       op init-sw -> init-cs3,
                       bop on_ -> use_,
                       bop off_ -> release_,
                       op on -> in-use,
                       op off -> ready })

}

mod* TABLE {
  protecting(GUEST1 + GUEST2 + GUEST3 +
             CHOP-STICK1 + CHOP-STICK2 + CHOP-STICK3)

  *[ Table ]*

  op init-table : -> Table
  bop pick1r : Table -> Table
  bop pick1l : Table -> Table
  bop pick2r : Table -> Table
  bop pick2l : Table -> Table
  bop pick3r : Table -> Table
  bop pick3l : Table -> Table
  bop rest1 : Table -> Table
  bop rest2 : Table -> Table
  bop rest3 : Table -> Table

  bop eating1? : Table -> Bool
  bop eating2? : Table -> Bool
  bop eating3? : Table -> Bool

  bop guest1 : Table -> Guest1
  bop guest2 : Table -> Guest2
  bop guest3 : Table -> Guest3
  bop chopstick1 : Table -> ChopStick1
  bop chopstick2 : Table -> ChopStick2
  bop chopstick3 : Table -> ChopStick3

  var T : Table

  eq eating1?(T) = eating?(guest1(T)) .
  eq eating2?(T) = eating?(guest2(T)) .
  eq eating3?(T) = eating?(guest3(T)) .

  eq guest1(init-table) = init-guest1 .
  ceq guest1(pick1r(T)) = pick-right(guest1(T))
      if status(chopstick1(T)) == ready .
  ceq guest1(pick1r(T)) = guest1(T)
      if status(chopstick1(T)) =/= ready .
  ceq guest1(pick1l(T)) = pick-left(guest1(T))
      if status(chopstick3(T)) == ready .
  ceq guest1(pick1l(T)) = guest1(T)
      if status(chopstick3(T)) =/= ready .
  eq guest1(pick2r(T)) = guest1(T) .
  eq guest1(pick2l(T)) = guest1(T) .
  eq guest1(pick3r(T)) = guest1(T) .
  eq guest1(pick3l(T)) = guest1(T) .
  ceq guest1(rest1(T)) = rest(guest1(T))
      if eating1?(T) == true .
  ceq guest1(rest1(T)) = guest1(T)
      if eating1?(T) =/= true .
  eq guest1(rest2(T)) = guest1(T) .
  eq guest1(rest3(T)) = guest1(T) .

  eq guest2(init-table) = init-guest2 .
  eq guest2(pick1r(T)) = guest2(T) .
  eq guest2(pick1l(T)) = guest2(T) .
  ceq guest2(pick2r(T)) = pick-right(guest2(T))
      if status(chopstick2(T)) == ready .
  ceq guest2(pick2r(T)) = guest2(T)
      if status(chopstick2(T)) =/= ready .
  ceq guest2(pick2l(T)) = pick-left(guest2(T))
      if status(chopstick1(T)) == ready .
  ceq guest2(pick2l(T)) = guest2(T)
      if status(chopstick1(T)) =/= ready .
  eq guest1(pick3r(T)) = guest1(T) .
  eq guest1(pick3l(T)) = guest1(T) .
  eq guest2(rest1(T)) = guest2(T) .
  ceq guest2(rest2(T)) = rest(guest2(T))
      if eating2?(T) == true .
  ceq guest2(rest2(T)) = guest2(T)
      if eating2?(T) =/= true .
  eq guest2(rest3(T)) = guest2(T) .

  eq guest3(init-table) = init-guest3 .
  eq guest3(pick1r(T)) = guest3(T) .
  eq guest3(pick1l(T)) = guest3(T) .
  eq guest3(pick2r(T)) = guest3(T) .
  eq guest3(pick2l(T)) = guest3(T) .
  ceq guest3(pick3r(T)) = pick-right(guest3(T))
      if status(chopstick3(T)) == ready .
  ceq guest3(pick3r(T)) = guest3(T)
      if status(chopstick3(T)) =/= ready .
  ceq guest3(pick3l(T)) = pick-left(guest3(T))
      if status(chopstick2(T)) == ready .
  ceq guest3(pick3l(T)) = guest3(T)
      if status(chopstick2(T)) =/= ready .
  eq guest3(rest1(T)) = guest3(T) .
  eq guest3(rest2(T)) = guest3(T) .
  ceq guest3(rest3(T)) = rest(guest3(T))
      if eating3?(T) == true .
  ceq guest3(rest3(T)) = guest3(T)
      if eating3?(T) =/= true .

  eq chopstick1(init-table) = init-cs1 .
  eq chopstick1(pick1r(T)) = use(chopstick1(T)) .
  eq chopstick1(pick1l(T)) = chopstick1(T) .
  eq chopstick1(pick2r(T)) = chopstick1(T) .
  eq chopstick1(pick2l(T)) = use(chopstick1(T)) .
  eq chopstick1(pick3r(T)) = chopstick1(T) .
  eq chopstick1(pick3l(T)) = chopstick1(T) .

  eq chopstick2(init-table) = init-cs2 .
  eq chopstick2(pick1r(T)) = chopstick2(T) .
  eq chopstick2(pick1l(T)) = chopstick2(T) .
  eq chopstick2(pick2r(T)) = use(chopstick2(T)) .
  eq chopstick2(pick2l(T)) = chopstick2(T) .
  eq chopstick2(pick3r(T)) = chopstick2(T) .
  eq chopstick2(pick3l(T)) = use(chopstick2(T)) .

  eq chopstick3(init-table) = init-cs3 .
  eq chopstick3(pick1r(T)) = chopstick3(T) .
  eq chopstick3(pick1l(T)) = use(chopstick3(T)) .
  eq chopstick3(pick2r(T)) = chopstick3(T) .
  eq chopstick3(pick2l(T)) = chopstick3(T) .
  eq chopstick3(pick3r(T)) = use(chopstick3(T)) .
  eq chopstick3(pick3l(T)) = chopstick3(T) .
}

eof

red status(right-hand(guest1(pick1r(pick1l(init-table))))) .

-- set tram path brute .
-- tram red status(right-hand(guest1(pick1r(pick1l(init-table))))) .
-- =============ここまで

以下最後まで brute に送っているコード

(init)
(sort |?Guest3..trs#26.| |Guest3..trs#25.| |?RightHand..trs#24.|
      |RightHand..trs#23.| |?Value..trs#22.| |Value..trs#21.|
      |?Bool.TRUTH-VALUE| |Bool.TRUTH-VALUE| |?LeftHand..trs#20.|
      |LeftHand..trs#19.| |?Value..trs#18.| |Value..trs#17.|
      |?Guest2..trs#16.| |Guest2..trs#15.| |?Guest1..trs#14.|
      |Guest1..trs#13.| |?ChopStick3..trs#12.| |ChopStick3..trs#11.|
      |?Value..trs#10.| |Value..trs#9.| |?ChopStick2..trs#8.|
      |ChopStick2..trs#7.| |?Value..trs#6.| |Value..trs#5.|
      |?ChopStick1..trs#4.| |ChopStick1..trs#3.| |?Value..trs#2.|
      |Value..trs#1.| |?Table.TABLE| |Table.TABLE|)
(sort-order (|Table.TABLE| |?Table.TABLE|)
            (|Value..trs#1.| |?Value..trs#2.|)
	    (|ChopStick1..trs#3.| |?ChopStick1..trs#4.|)
	    (|Value..trs#5.| |?Value..trs#6.|)
	    (|ChopStick2..trs#7.| |?ChopStick2..trs#8.|)
	    (|Value..trs#9.| |?Value..trs#10.|)
	    (|ChopStick3..trs#11.| |?ChopStick3..trs#12.|)
	    (|Guest1..trs#13.| |?Guest1..trs#14.|)
	    (|Guest2..trs#15.| |?Guest2..trs#16.|)
	    (|Value..trs#17.| |?Value..trs#18.|)
	    (|LeftHand..trs#19.| |?LeftHand..trs#20.|)
	    (|Bool.TRUTH-VALUE| |?Bool.TRUTH-VALUE|)
	    (|Value..trs#21.| |?Value..trs#22.|)
	    (|RightHand..trs#23.| |?RightHand..trs#24.|)
	    (|Guest3..trs#25.| |?Guest3..trs#26.|))
(op |chopstick3/1?ChopStick3| (|Table.TABLE|) |ChopStick3..trs#11.| (1 0))
(op |chopstick2/1?ChopStick2| (|Table.TABLE|) |ChopStick2..trs#7.| (1 0))
(op |chopstick1/1?ChopStick1| (|Table.TABLE|) |ChopStick1..trs#3.| (1 0))
(op |guest3/1?Guest3| (|Table.TABLE|) |Guest3..trs#25.| (1 0))
(op |guest2/1?Guest2| (|Table.TABLE|) |Guest2..trs#15.| (1 0))
(op |guest1/1?Guest1| (|Table.TABLE|) |Guest1..trs#13.| (1 0))
(op |eating3?/1?Bool| (|Table.TABLE|) |Bool.TRUTH-VALUE| (0 1 0))
(op |eating2?/1?Bool| (|Table.TABLE|) |Bool.TRUTH-VALUE| (0 1 0))
(op |eating1?/1?Bool| (|Table.TABLE|) |Bool.TRUTH-VALUE| (0 1 0))
(op |rest3/1?Table| (|Table.TABLE|) |Table.TABLE| (1))
(op |rest2/1?Table| (|Table.TABLE|) |Table.TABLE| (1))
(op |rest1/1?Table| (|Table.TABLE|) |Table.TABLE| (1))
(op |pick3l/1?Table| (|Table.TABLE|) |Table.TABLE| (1))
(op |pick3r/1?Table| (|Table.TABLE|) |Table.TABLE| (1))
(op |pick2l/1?Table| (|Table.TABLE|) |Table.TABLE| (1))
(op |pick2r/1?Table| (|Table.TABLE|) |Table.TABLE| (1))
(op |pick1l/1?Table| (|Table.TABLE|) |Table.TABLE| (1))
(op |pick1r/1?Table| (|Table.TABLE|) |Table.TABLE| (1))
(op |init-table/0?Table| nil |Table.TABLE| nil)
(op |init-guest3/0?Guest3| nil |Guest3..trs#25.| nil)
(op |status_?Value| (|LeftHand..trs#19.|) |Value..trs#17.| (1 0))
(op |pick_?LeftHand| (|LeftHand..trs#19.|) |LeftHand..trs#19.| (1))
(op |release_?LeftHand| (|LeftHand..trs#19.|) |LeftHand..trs#19.| (1))
(op |init-lh/0?LeftHand| nil |LeftHand..trs#19.| nil)
(op |status_?Value| (|RightHand..trs#23.|) |Value..trs#21.| (1 0))
(op |empty/0?Value| nil |Value..trs#17.| nil)
(op |empty/0?Value| nil |Value..trs#21.| nil)
(op |filled/0?Value| nil |Value..trs#17.| nil)
(op |filled/0?Value| nil |Value..trs#21.| nil)
(op |_implies_| (|Bool.TRUTH-VALUE| |Bool.TRUTH-VALUE|)
     |Bool.TRUTH-VALUE| (0 1 2 0) (:r-assoc))
(op |not_| (|Bool.TRUTH-VALUE|) |Bool.TRUTH-VALUE| (1 0))
(op |_xor_| (|Bool.TRUTH-VALUE| |Bool.TRUTH-VALUE|)
     |Bool.TRUTH-VALUE| (1 2 0) (:r-assoc (:idr (|false/0|)) :comm :assoc))
(op |_or-else_| (|Bool.TRUTH-VALUE| |Bool.TRUTH-VALUE|)
     |Bool.TRUTH-VALUE| (1 0 2 0) (:r-assoc))
(op |_or_| (|Bool.TRUTH-VALUE| |Bool.TRUTH-VALUE|)
     |Bool.TRUTH-VALUE| (1 2 0) (:r-assoc (:idr (|false/0|)) :comm :assoc))
(op |_and-also_| (|Bool.TRUTH-VALUE| |Bool.TRUTH-VALUE|)
     |Bool.TRUTH-VALUE| (1 0 2 0) (:r-assoc))
(op |_and_| (|Bool.TRUTH-VALUE| |Bool.TRUTH-VALUE|)
     |Bool.TRUTH-VALUE| (1 2 0) (:r-assoc (:idr (|true/0|)) :comm :assoc))
(op |true/0| nil |Bool.TRUTH-VALUE| nil (:constr))
(op |false/0| nil |Bool.TRUTH-VALUE| nil (:constr))
(op _=*=_ (|Table.TABLE| |Table.TABLE|) |Bool.TRUTH-VALUE| (1 2 0))
(op _=*=_ (|ChopStick1..trs#3.| |ChopStick1..trs#3.|) |Bool.TRUTH-VALUE| (1 2 0))
(op _=*=_ (|ChopStick2..trs#7.| |ChopStick2..trs#7.|) |Bool.TRUTH-VALUE| (1 2 0))
(op _=*=_ (|ChopStick3..trs#11.| |ChopStick3..trs#11.|) |Bool.TRUTH-VALUE| (1 2 0))
(op _=*=_ (|Guest1..trs#13.| |Guest1..trs#13.|) |Bool.TRUTH-VALUE| (1 2 0))
(op _=*=_ (|Guest2..trs#15.| |Guest2..trs#15.|) |Bool.TRUTH-VALUE| (1 2 0))
(op _=*=_ (|Guest3..trs#25.| |Guest3..trs#25.|) |Bool.TRUTH-VALUE| (1 2 0))
(op _=*=_ (|LeftHand..trs#19.| |LeftHand..trs#19.|) |Bool.TRUTH-VALUE| (1 2 0))
(op _=*=_ (|RightHand..trs#23.| |RightHand..trs#23.|) |Bool.TRUTH-VALUE| (1 2 0))
(op |pick_?RightHand| (|RightHand..trs#23.|) |RightHand..trs#23.| (1))
(op |release_?RightHand| (|RightHand..trs#23.|) |RightHand..trs#23.| (1))
(op |init-rh/0?RightHand| nil |RightHand..trs#23.| nil)
(op |pick-right/1?Guest3| (|Guest3..trs#25.|) |Guest3..trs#25.| (1))
(op |pick-left/1?Guest3| (|Guest3..trs#25.|) |Guest3..trs#25.| (1))
(op |rest/1?Guest3| (|Guest3..trs#25.|) |Guest3..trs#25.| (1))
(op |eating?/1?Bool| (|Guest1..trs#13.|) |Bool.TRUTH-VALUE| (0 1 0))
(op |eating?/1?Bool| (|Guest2..trs#15.|) |Bool.TRUTH-VALUE| (0 1 0))
(op |eating?/1?Bool| (|Guest3..trs#25.|) |Bool.TRUTH-VALUE| (0 1 0))
(op |right-hand/1?RightHand| (|Guest1..trs#13.|) |RightHand..trs#23.| (1 0))
(op |right-hand/1?RightHand| (|Guest2..trs#15.|) |RightHand..trs#23.| (1 0))
(op |right-hand/1?RightHand| (|Guest3..trs#25.|) |RightHand..trs#23.| (1 0))
(op |left-hand/1?LeftHand| (|Guest1..trs#13.|) |LeftHand..trs#19.| (1 0))
(op |left-hand/1?LeftHand| (|Guest2..trs#15.|) |LeftHand..trs#19.| (1 0))
(op |left-hand/1?LeftHand| (|Guest3..trs#25.|) |LeftHand..trs#19.| (1 0))
(op |init-guest2/0?Guest2| nil |Guest2..trs#15.| nil)
(op |pick-right/1?Guest2| (|Guest2..trs#15.|) |Guest2..trs#15.| (1))
(op |pick-left/1?Guest2| (|Guest2..trs#15.|) |Guest2..trs#15.| (1))
(op |rest/1?Guest2| (|Guest2..trs#15.|) |Guest2..trs#15.| (1))
(op |init-guest1/0?Guest1| nil |Guest1..trs#13.| nil)
(op |pick-right/1?Guest1| (|Guest1..trs#13.|) |Guest1..trs#13.| (1))
(op |pick-left/1?Guest1| (|Guest1..trs#13.|) |Guest1..trs#13.| (1))
(op |rest/1?Guest1| (|Guest1..trs#13.|) |Guest1..trs#13.| (1))
(op |init-cs3/0?ChopStick3| nil |ChopStick3..trs#11.| nil)
(op |release_?ChopStick3| (|ChopStick3..trs#11.|) |ChopStick3..trs#11.| (1))
(op |use_?ChopStick3| (|ChopStick3..trs#11.|) |ChopStick3..trs#11.| (1))
(op |in-use/0?Value| nil |Value..trs#1.| nil)
(op |in-use/0?Value| nil |Value..trs#5.| nil)
(op |in-use/0?Value| nil |Value..trs#9.| nil)
(op |ready/0?Value| nil |Value..trs#1.| nil)
(op |ready/0?Value| nil |Value..trs#5.| nil)
(op |ready/0?Value| nil |Value..trs#9.| nil)
(op |status_?Value| (|ChopStick3..trs#11.|) |Value..trs#9.| (1 0))
(op |init-cs2/0?ChopStick2| nil |ChopStick2..trs#7.| nil)
(op |release_?ChopStick2| (|ChopStick2..trs#7.|) |ChopStick2..trs#7.| (1))
(op |use_?ChopStick2| (|ChopStick2..trs#7.|) |ChopStick2..trs#7.| (1))
(op |status_?Value| (|ChopStick2..trs#7.|) |Value..trs#5.| (1 0))
(op |init-cs1/0?ChopStick1| nil |ChopStick1..trs#3.| nil)
(op |release_?ChopStick1| (|ChopStick1..trs#3.|) |ChopStick1..trs#3.| (1))
(op |use_?ChopStick1| (|ChopStick1..trs#3.|) |ChopStick1..trs#3.| (1))
(op |status_?Value| (|ChopStick1..trs#3.|) |Value..trs#1.| (1 0))
(op |chopstick3/1?ChopStick3| (|?Table.TABLE|) |?ChopStick3..trs#12.| (1 0))
(op |chopstick2/1?ChopStick2| (|?Table.TABLE|) |?ChopStick2..trs#8.| (1 0))
(op |chopstick1/1?ChopStick1| (|?Table.TABLE|) |?ChopStick1..trs#4.| (1 0))
(op |guest3/1?Guest3| (|?Table.TABLE|) |?Guest3..trs#26.| (1 0))
(op |guest2/1?Guest2| (|?Table.TABLE|) |?Guest2..trs#16.| (1 0))
(op |guest1/1?Guest1| (|?Table.TABLE|) |?Guest1..trs#14.| (1 0))
(op |eating3?/1?Bool| (|?Table.TABLE|) |?Bool.TRUTH-VALUE| (1 0))
(op |eating2?/1?Bool| (|?Table.TABLE|) |?Bool.TRUTH-VALUE| (1 0))
(op |eating1?/1?Bool| (|?Table.TABLE|) |?Bool.TRUTH-VALUE| (1 0))
(op |rest3/1?Table| (|?Table.TABLE|) |?Table.TABLE| (1 0))
(op |rest2/1?Table| (|?Table.TABLE|) |?Table.TABLE| (1 0))
(op |rest1/1?Table| (|?Table.TABLE|) |?Table.TABLE| (1 0))
(op |pick3l/1?Table| (|?Table.TABLE|) |?Table.TABLE| (1 0))
(op |pick3r/1?Table| (|?Table.TABLE|) |?Table.TABLE| (1 0))
(op |pick2l/1?Table| (|?Table.TABLE|) |?Table.TABLE| (1 0))
(op |pick2r/1?Table| (|?Table.TABLE|) |?Table.TABLE| (1 0))
(op |pick1l/1?Table| (|?Table.TABLE|) |?Table.TABLE| (1 0))
(op |pick1r/1?Table| (|?Table.TABLE|) |?Table.TABLE| (1 0))
(op |status_?Value| (|?LeftHand..trs#20.|) |?Value..trs#18.| (1 0))
(op |pick_?LeftHand| (|?LeftHand..trs#20.|) |?LeftHand..trs#20.| (1 0))
(op |release_?LeftHand| (|?LeftHand..trs#20.|) |?LeftHand..trs#20.| (1 0))
(op |status_?Value| (|?RightHand..trs#24.|) |?Value..trs#22.| (1 0))
(op |_implies_| (|?Bool.TRUTH-VALUE| |?Bool.TRUTH-VALUE|)
     |?Bool.TRUTH-VALUE| (1 2 0) (:r-assoc))
(op |not_| (|?Bool.TRUTH-VALUE|) |?Bool.TRUTH-VALUE| (1 0))
(op |_xor_| (|?Bool.TRUTH-VALUE| |?Bool.TRUTH-VALUE|)
     |?Bool.TRUTH-VALUE| (1 2 0) (:r-assoc))
(op |_or-else_| (|?Bool.TRUTH-VALUE| |?Bool.TRUTH-VALUE|)
     |?Bool.TRUTH-VALUE| (1 2 0) (:r-assoc))
(op |_or_| (|?Bool.TRUTH-VALUE| |?Bool.TRUTH-VALUE|)
     |?Bool.TRUTH-VALUE| (1 2 0) (:r-assoc))
(op |_and-also_| (|?Bool.TRUTH-VALUE| |?Bool.TRUTH-VALUE|)
     |?Bool.TRUTH-VALUE| (1 2 0) (:r-assoc))
(op |_and_| (|?Bool.TRUTH-VALUE| |?Bool.TRUTH-VALUE|)
     |?Bool.TRUTH-VALUE| (1 2 0) (:r-assoc))
(op _=*=_ (|?Table.TABLE| |?Table.TABLE|) |?Bool.TRUTH-VALUE| (1 2 0))
(op _=*=_ (|?ChopStick1..trs#4.| |?ChopStick1..trs#4.|)
    |?Bool.TRUTH-VALUE| (1 2 0))
(op _=*=_ (|?ChopStick2..trs#8.| |?ChopStick2..trs#8.|)
    |?Bool.TRUTH-VALUE| (1 2 0))
(op _=*=_ (|?ChopStick3..trs#12.| |?ChopStick3..trs#12.|)
    |?Bool.TRUTH-VALUE| (1 2 0))
(op _=*=_ (|?Guest1..trs#14.| |?Guest1..trs#14.|) |?Bool.TRUTH-VALUE| (1 2 0))
(op _=*=_ (|?Guest2..trs#16.| |?Guest2..trs#16.|) |?Bool.TRUTH-VALUE| (1 2 0))
(op _=*=_ (|?Guest3..trs#26.| |?Guest3..trs#26.|) |?Bool.TRUTH-VALUE| (1 2 0))
(op _=*=_ (|?LeftHand..trs#20.| |?LeftHand..trs#20.|)
    |?Bool.TRUTH-VALUE| (1 2 0))
(op _=*=_ (|?RightHand..trs#24.| |?RightHand..trs#24.|)
    |?Bool.TRUTH-VALUE| (1 2 0))
(op |pick_?RightHand| (|?RightHand..trs#24.|) |?RightHand..trs#24.| (1 0))
(op |release_?RightHand| (|?RightHand..trs#24.|) |?RightHand..trs#24.| (1 0))
(op |pick-right/1?Guest3| (|?Guest3..trs#26.|) |?Guest3..trs#26.| (1 0))
(op |pick-left/1?Guest3| (|?Guest3..trs#26.|) |?Guest3..trs#26.| (1 0))
(op |rest/1?Guest3| (|?Guest3..trs#26.|) |?Guest3..trs#26.| (1 0))
(op |eating?/1?Bool| (|?Guest1..trs#14.|) |?Bool.TRUTH-VALUE| (1 0))
(op |eating?/1?Bool| (|?Guest2..trs#16.|) |?Bool.TRUTH-VALUE| (1 0))
(op |eating?/1?Bool| (|?Guest3..trs#26.|) |?Bool.TRUTH-VALUE| (1 0))
(op |right-hand/1?RightHand| (|?Guest1..trs#14.|) |?RightHand..trs#24.| (1 0))
(op |right-hand/1?RightHand| (|?Guest2..trs#16.|) |?RightHand..trs#24.| (1 0))
(op |right-hand/1?RightHand| (|?Guest3..trs#26.|) |?RightHand..trs#24.| (1 0))
(op |left-hand/1?LeftHand| (|?Guest1..trs#14.|) |?LeftHand..trs#20.| (1 0))
(op |left-hand/1?LeftHand| (|?Guest2..trs#16.|) |?LeftHand..trs#20.| (1 0))
(op |left-hand/1?LeftHand| (|?Guest3..trs#26.|) |?LeftHand..trs#20.| (1 0))
(op |pick-right/1?Guest2| (|?Guest2..trs#16.|) |?Guest2..trs#16.| (1 0))
(op |pick-left/1?Guest2| (|?Guest2..trs#16.|) |?Guest2..trs#16.| (1 0))
(op |rest/1?Guest2| (|?Guest2..trs#16.|) |?Guest2..trs#16.| (1 0))
(op |pick-right/1?Guest1| (|?Guest1..trs#14.|) |?Guest1..trs#14.| (1 0))
(op |pick-left/1?Guest1| (|?Guest1..trs#14.|) |?Guest1..trs#14.| (1 0))
(op |rest/1?Guest1| (|?Guest1..trs#14.|) |?Guest1..trs#14.| (1 0))
(op |release_?ChopStick3| (|?ChopStick3..trs#12.|) |?ChopStick3..trs#12.| (1 0))
(op |use_?ChopStick3| (|?ChopStick3..trs#12.|) |?ChopStick3..trs#12.| (1 0))
(op |status_?Value| (|?ChopStick3..trs#12.|) |?Value..trs#10.| (1 0))
(op |release_?ChopStick2| (|?ChopStick2..trs#8.|) |?ChopStick2..trs#8.| (1 0))
(op |use_?ChopStick2| (|?ChopStick2..trs#8.|) |?ChopStick2..trs#8.| (1 0))
(op |status_?Value| (|?ChopStick2..trs#8.|) |?Value..trs#6.| (1 0))
(op |release_?ChopStick1| (|?ChopStick1..trs#4.|) |?ChopStick1..trs#4.| (1 0))
(op |use_?ChopStick1| (|?ChopStick1..trs#4.|) |?ChopStick1..trs#4.| (1 0))
(op |status_?Value| (|?ChopStick1..trs#4.|) |?Value..trs#2.| (1 0))
(op |=/=-aux| (|?Guest3..trs#26.| |?Guest3..trs#26.|) |Bool.TRUTH-VALUE| (1 2 0))
(op |==-aux| (|?Guest3..trs#26.| |?Guest3..trs#26.|) |Bool.TRUTH-VALUE| (1 2 0))
(op |_=b=_| (|?Guest3..trs#26.| |?Guest3..trs#26.|) |Bool.TRUTH-VALUE| (1 2 0))
(op _=/=_ (|?Guest3..trs#26.| |?Guest3..trs#26.|) |Bool.TRUTH-VALUE| (1 2 0))
(op _==_ (|?Guest3..trs#26.| |?Guest3..trs#26.|) |Bool.TRUTH-VALUE| (1 2 0))
(op |if_then_else_fi| (|?Bool.TRUTH-VALUE| |?Guest3..trs#26.| |?Guest3..trs#26.|)
     |?Guest3..trs#26.| (1 0))
(op |=/=-aux| (|?RightHand..trs#24.| |?RightHand..trs#24.|)
     |Bool.TRUTH-VALUE| (1 2 0))
(op |==-aux| (|?RightHand..trs#24.| |?RightHand..trs#24.|)
     |Bool.TRUTH-VALUE| (1 2 0))
(op |_=b=_| (|?RightHand..trs#24.| |?RightHand..trs#24.|)
     |Bool.TRUTH-VALUE| (1 2 0))
(op _=/=_ (|?RightHand..trs#24.| |?RightHand..trs#24.|)
    |Bool.TRUTH-VALUE| (1 2 0))
(op _==_ (|?RightHand..trs#24.| |?RightHand..trs#24.|)
    |Bool.TRUTH-VALUE| (1 2 0))
(op |if_then_else_fi| (|?Bool.TRUTH-VALUE| |?RightHand..trs#24.|
					    |?RightHand..trs#24.|)
     |?RightHand..trs#24.| (1 0))
(op |=/=-aux| (|?Value..trs#22.| |?Value..trs#22.|) |Bool.TRUTH-VALUE| (1 2 0))
(op |==-aux| (|?Value..trs#22.| |?Value..trs#22.|) |Bool.TRUTH-VALUE| (1 2 0))
(op _=/=_ (|?Value..trs#22.| |?Value..trs#22.|) |Bool.TRUTH-VALUE| (1 2 0))
(op _==_ (|?Value..trs#22.| |?Value..trs#22.|) |Bool.TRUTH-VALUE| (1 2 0))
(op |if_then_else_fi| (|?Bool.TRUTH-VALUE| |?Value..trs#22.| |?Value..trs#22.|) |?Value..trs#22.| (1 0))
(op |=/=-aux| (|?Bool.TRUTH-VALUE| |?Bool.TRUTH-VALUE|)
     |Bool.TRUTH-VALUE| (1 2 0))
(op |==-aux| (|?Bool.TRUTH-VALUE| |?Bool.TRUTH-VALUE|)
     |Bool.TRUTH-VALUE| (1 2 0))
(op _=/=_ (|?Bool.TRUTH-VALUE| |?Bool.TRUTH-VALUE|)
    |Bool.TRUTH-VALUE| (1 2 0))
(op _==_ (|?Bool.TRUTH-VALUE| |?Bool.TRUTH-VALUE|)
    |Bool.TRUTH-VALUE| (1 2 0))
(op |if_then_else_fi| (|?Bool.TRUTH-VALUE| |?Bool.TRUTH-VALUE| |?Bool.TRUTH-VALUE|)
     |?Bool.TRUTH-VALUE| (1 0))
(op |=/=-aux| (|?LeftHand..trs#20.| |?LeftHand..trs#20.|)
     |Bool.TRUTH-VALUE| (1 2 0))
(op |==-aux| (|?LeftHand..trs#20.| |?LeftHand..trs#20.|)
     |Bool.TRUTH-VALUE| (1 2 0))
(op |_=b=_| (|?LeftHand..trs#20.| |?LeftHand..trs#20.|)
     |Bool.TRUTH-VALUE| (1 2 0))
(op _=/=_ (|?LeftHand..trs#20.| |?LeftHand..trs#20.|)
    |Bool.TRUTH-VALUE| (1 2 0))
(op _==_ (|?LeftHand..trs#20.| |?LeftHand..trs#20.|)
    |Bool.TRUTH-VALUE| (1 2 0))
(op |if_then_else_fi| (|?Bool.TRUTH-VALUE| |?LeftHand..trs#20.|
					    |?LeftHand..trs#20.|)
     |?LeftHand..trs#20.| (1 0))
(op |=/=-aux| (|?Value..trs#18.| |?Value..trs#18.|) |Bool.TRUTH-VALUE| (1 2 0))
(op |==-aux| (|?Value..trs#18.| |?Value..trs#18.|) |Bool.TRUTH-VALUE| (1 2 0))
(op _=/=_ (|?Value..trs#18.| |?Value..trs#18.|) |Bool.TRUTH-VALUE| (1 2 0))
(op _==_ (|?Value..trs#18.| |?Value..trs#18.|) |Bool.TRUTH-VALUE| (1 2 0))
(op |if_then_else_fi| (|?Bool.TRUTH-VALUE|
			|?Value..trs#18.| |?Value..trs#18.|)
     |?Value..trs#18.| (1 0))
(op |=/=-aux| (|?Guest2..trs#16.| |?Guest2..trs#16.|) |Bool.TRUTH-VALUE| (1 2 0))
(op |==-aux| (|?Guest2..trs#16.| |?Guest2..trs#16.|) |Bool.TRUTH-VALUE| (1 2 0))
(op |_=b=_| (|?Guest2..trs#16.| |?Guest2..trs#16.|) |Bool.TRUTH-VALUE| (1 2 0))
(op _=/=_ (|?Guest2..trs#16.| |?Guest2..trs#16.|) |Bool.TRUTH-VALUE| (1 2 0))
(op _==_ (|?Guest2..trs#16.| |?Guest2..trs#16.|) |Bool.TRUTH-VALUE| (1 2 0))
(op |if_then_else_fi| (|?Bool.TRUTH-VALUE|
			|?Guest2..trs#16.| |?Guest2..trs#16.|)
     |?Guest2..trs#16.| (1 0))
(op |=/=-aux| (|?Guest1..trs#14.| |?Guest1..trs#14.|) |Bool.TRUTH-VALUE| (1 2 0))
(op |==-aux| (|?Guest1..trs#14.| |?Guest1..trs#14.|) |Bool.TRUTH-VALUE| (1 2 0))
(op |_=b=_| (|?Guest1..trs#14.| |?Guest1..trs#14.|) |Bool.TRUTH-VALUE| (1 2 0))
(op _=/=_ (|?Guest1..trs#14.| |?Guest1..trs#14.|) |Bool.TRUTH-VALUE| (1 2 0))
(op _==_ (|?Guest1..trs#14.| |?Guest1..trs#14.|) |Bool.TRUTH-VALUE| (1 2 0))
(op |if_then_else_fi| (|?Bool.TRUTH-VALUE|
			|?Guest1..trs#14.| |?Guest1..trs#14.|)
     |?Guest1..trs#14.| (1 0))
(op |=/=-aux| (|?ChopStick3..trs#12.| |?ChopStick3..trs#12.|)
     |Bool.TRUTH-VALUE| (1 2 0))
(op |==-aux| (|?ChopStick3..trs#12.| |?ChopStick3..trs#12.|)
     |Bool.TRUTH-VALUE| (1 2 0))
(op |_=b=_| (|?ChopStick3..trs#12.| |?ChopStick3..trs#12.|)
     |Bool.TRUTH-VALUE| (1 2 0))
(op _=/=_ (|?ChopStick3..trs#12.| |?ChopStick3..trs#12.|)
    |Bool.TRUTH-VALUE| (1 2 0))
(op _==_ (|?ChopStick3..trs#12.| |?ChopStick3..trs#12.|)
    |Bool.TRUTH-VALUE| (1 2 0))
(op |if_then_else_fi| (|?Bool.TRUTH-VALUE|
			|?ChopStick3..trs#12.| |?ChopStick3..trs#12.|)
     |?ChopStick3..trs#12.| (1 0))
(op |=/=-aux| (|?Value..trs#10.| |?Value..trs#10.|) |Bool.TRUTH-VALUE| (1 2 0))
(op |==-aux| (|?Value..trs#10.| |?Value..trs#10.|) |Bool.TRUTH-VALUE| (1 2 0))
(op _=/=_ (|?Value..trs#10.| |?Value..trs#10.|) |Bool.TRUTH-VALUE| (1 2 0))
(op _==_ (|?Value..trs#10.| |?Value..trs#10.|) |Bool.TRUTH-VALUE| (1 2 0))
(op |if_then_else_fi| (|?Bool.TRUTH-VALUE|
			|?Value..trs#10.| |?Value..trs#10.|)
     |?Value..trs#10.| (1 0))
(op |=/=-aux| (|?ChopStick2..trs#8.| |?ChopStick2..trs#8.|)
     |Bool.TRUTH-VALUE| (1 2 0))
(op |==-aux| (|?ChopStick2..trs#8.| |?ChopStick2..trs#8.|)
     |Bool.TRUTH-VALUE| (1 2 0))
(op |_=b=_| (|?ChopStick2..trs#8.| |?ChopStick2..trs#8.|)
     |Bool.TRUTH-VALUE| (1 2 0))
(op _=/=_ (|?ChopStick2..trs#8.| |?ChopStick2..trs#8.|)
    |Bool.TRUTH-VALUE| (1 2 0))
(op _==_ (|?ChopStick2..trs#8.| |?ChopStick2..trs#8.|)
    |Bool.TRUTH-VALUE| (1 2 0))
(op |if_then_else_fi| (|?Bool.TRUTH-VALUE|
			|?ChopStick2..trs#8.| |?ChopStick2..trs#8.|)
     |?ChopStick2..trs#8.| (1 0))
(op |=/=-aux| (|?Value..trs#6.| |?Value..trs#6.|) |Bool.TRUTH-VALUE| (1 2 0))
(op |==-aux| (|?Value..trs#6.| |?Value..trs#6.|) |Bool.TRUTH-VALUE| (1 2 0))
(op _=/=_ (|?Value..trs#6.| |?Value..trs#6.|) |Bool.TRUTH-VALUE| (1 2 0))
(op _==_ (|?Value..trs#6.| |?Value..trs#6.|) |Bool.TRUTH-VALUE| (1 2 0))
(op |if_then_else_fi| (|?Bool.TRUTH-VALUE|
			|?Value..trs#6.| |?Value..trs#6.|)
     |?Value..trs#6.| (1 0))
(op |=/=-aux| (|?ChopStick1..trs#4.| |?ChopStick1..trs#4.|)
     |Bool.TRUTH-VALUE| (1 2 0))
(op |==-aux| (|?ChopStick1..trs#4.| |?ChopStick1..trs#4.|)
     |Bool.TRUTH-VALUE| (1 2 0))
(op |_=b=_| (|?ChopStick1..trs#4.| |?ChopStick1..trs#4.|)
     |Bool.TRUTH-VALUE| (1 2 0))
(op _=/=_ (|?ChopStick1..trs#4.| |?ChopStick1..trs#4.|)
    |Bool.TRUTH-VALUE| (1 2 0))
(op _==_ (|?ChopStick1..trs#4.| |?ChopStick1..trs#4.|)
    |Bool.TRUTH-VALUE| (1 2 0))
(op |if_then_else_fi| (|?Bool.TRUTH-VALUE|
			|?ChopStick1..trs#4.| |?ChopStick1..trs#4.|)
     |?ChopStick1..trs#4.| (1 0))
(op |=/=-aux| (|?Value..trs#2.| |?Value..trs#2.|) |Bool.TRUTH-VALUE| (1 2 0))
(op |==-aux| (|?Value..trs#2.| |?Value..trs#2.|) |Bool.TRUTH-VALUE| (1 2 0))
(op _=/=_ (|?Value..trs#2.| |?Value..trs#2.|) |Bool.TRUTH-VALUE| (1 2 0))
(op _==_ (|?Value..trs#2.| |?Value..trs#2.|) |Bool.TRUTH-VALUE| (1 2 0))
(op |if_then_else_fi| (|?Bool.TRUTH-VALUE|
			|?Value..trs#2.| |?Value..trs#2.|)
     |?Value..trs#2.| (1 0))
(op |=/=-aux| (|?Table.TABLE| |?Table.TABLE|) |Bool.TRUTH-VALUE| (1 2 0))
(op |==-aux| (|?Table.TABLE| |?Table.TABLE|) |Bool.TRUTH-VALUE| (1 2 0))
(op |_=b=_| (|?Table.TABLE| |?Table.TABLE|) |Bool.TRUTH-VALUE| (1 2 0))
(op _=/=_ (|?Table.TABLE| |?Table.TABLE|) |Bool.TRUTH-VALUE| (1 2 0))
(op _==_ (|?Table.TABLE| |?Table.TABLE|) |Bool.TRUTH-VALUE| (1 2 0))
(op |if_then_else_fi| (|?Bool.TRUTH-VALUE|
			|?Table.TABLE| |?Table.TABLE|)
     |?Table.TABLE| (1 0))
(op |!if| (|Bool.TRUTH-VALUE|) |Bool.TRUTH-VALUE| (1 0))
(rule ((t |Table.TABLE|)) (|eating1?/1?Bool| t)
      (|eating?/1?Bool| (|guest1/1?Guest1| t)))
(rule ((t |Table.TABLE|)) (|eating2?/1?Bool| t)
      (|eating?/1?Bool| (|guest2/1?Guest2| t)))
(rule ((t |Table.TABLE|)) (|eating3?/1?Bool| t)
      (|eating?/1?Bool| (|guest3/1?Guest3| t)))
(rule nil (|guest1/1?Guest1| (|init-table/0?Table|))
      (|init-guest1/0?Guest1|))
(rule ((t |Table.TABLE|)) (|guest1/1?Guest1| (|pick1r/1?Table| t))
      (|pick-right/1?Guest1| (|guest1/1?Guest1| t))
      (((_==_ (|status_?Value| (|chopstick1/1?ChopStick1| t))
	      (|ready/0?Value|)) (|true/0|))))
(rule ((t |Table.TABLE|))
      (|guest1/1?Guest1| (|pick1r/1?Table| t))
      (|guest1/1?Guest1| t)
      (((_=/=_ (|status_?Value| (|chopstick1/1?ChopStick1| t))
	       (|ready/0?Value|))
	(|true/0|))))
(rule ((t |Table.TABLE|)) (|guest1/1?Guest1| (|pick1l/1?Table| t))
      (|pick-left/1?Guest1| (|guest1/1?Guest1| t))
      (((_==_ (|status_?Value| (|chopstick3/1?ChopStick3| t)) (|ready/0?Value|))
	(|true/0|))))
(rule ((t |Table.TABLE|)) (|guest1/1?Guest1| (|pick1l/1?Table| t))
      (|guest1/1?Guest1| t)
      (((_=/=_ (|status_?Value| (|chopstick3/1?ChopStick3| t)) (|ready/0?Value|))
	(|true/0|))))
(rule ((t |Table.TABLE|)) (|guest1/1?Guest1| (|pick2r/1?Table| t))
      (|guest1/1?Guest1| t))
(rule ((t |Table.TABLE|)) (|guest1/1?Guest1| (|pick2l/1?Table| t))
      (|guest1/1?Guest1| t))
(rule ((t |Table.TABLE|)) (|guest1/1?Guest1| (|pick3r/1?Table| t))
      (|guest1/1?Guest1| t))
(rule ((t |Table.TABLE|)) (|guest1/1?Guest1| (|pick3l/1?Table| t))
      (|guest1/1?Guest1| t))
(rule ((t |Table.TABLE|)) (|guest1/1?Guest1| (|rest1/1?Table| t))
      (|rest/1?Guest1| (|guest1/1?Guest1| t))
      (((_==_ (|eating1?/1?Bool| t) (|true/0|))
	(|true/0|))))
(rule ((t |Table.TABLE|)) (|guest1/1?Guest1| (|rest1/1?Table| t))
      (|guest1/1?Guest1| t)
      (((_=/=_ (|eating1?/1?Bool| t) (|true/0|))
	(|true/0|))))
(rule ((t |Table.TABLE|)) (|guest1/1?Guest1| (|rest2/1?Table| t))
      (|guest1/1?Guest1| t))
(rule ((t |Table.TABLE|)) (|guest1/1?Guest1| (|rest3/1?Table| t))
      (|guest1/1?Guest1| t))
(rule nil (|guest2/1?Guest2| (|init-table/0?Table|))
      (|init-guest2/0?Guest2|))
(rule ((t |Table.TABLE|)) (|guest2/1?Guest2| (|pick1r/1?Table| t))
      (|guest2/1?Guest2| t))
(rule ((t |Table.TABLE|)) (|guest2/1?Guest2| (|pick1l/1?Table| t))
      (|guest2/1?Guest2| t))
(rule ((t |Table.TABLE|)) (|guest2/1?Guest2| (|pick2r/1?Table| t))
      (|pick-right/1?Guest2| (|guest2/1?Guest2| t))
      (((_==_ (|status_?Value| (|chopstick2/1?ChopStick2| t)) (|ready/0?Value|))
	(|true/0|))))
(rule ((t |Table.TABLE|)) (|guest2/1?Guest2| (|pick2r/1?Table| t))
      (|guest2/1?Guest2| t)
      (((_=/=_ (|status_?Value| (|chopstick2/1?ChopStick2| t)) (|ready/0?Value|))
	(|true/0|))))
(rule ((t |Table.TABLE|)) (|guest2/1?Guest2| (|pick2l/1?Table| t))
      (|pick-left/1?Guest2| (|guest2/1?Guest2| t))
      (((_==_ (|status_?Value| (|chopstick1/1?ChopStick1| t)) (|ready/0?Value|))
	(|true/0|))))
(rule ((t |Table.TABLE|)) (|guest2/1?Guest2| (|pick2l/1?Table| t))
      (|guest2/1?Guest2| t)
      (((_=/=_ (|status_?Value| (|chopstick1/1?ChopStick1| t)) (|ready/0?Value|))
	(|true/0|))))
(rule ((t |Table.TABLE|)) (|guest1/1?Guest1| (|pick3r/1?Table| t))
      (|guest1/1?Guest1| t))
(rule ((t |Table.TABLE|)) (|guest1/1?Guest1| (|pick3l/1?Table| t))
      (|guest1/1?Guest1| t))
(rule ((t |Table.TABLE|)) (|guest2/1?Guest2| (|rest1/1?Table| t))
      (|guest2/1?Guest2| t))
(rule ((t |Table.TABLE|)) (|guest2/1?Guest2| (|rest2/1?Table| t))
      (|rest/1?Guest2| (|guest2/1?Guest2| t))
      (((_==_ (|eating2?/1?Bool| t) (|true/0|))
	(|true/0|))))
(rule ((t |Table.TABLE|)) (|guest2/1?Guest2| (|rest2/1?Table| t))
      (|guest2/1?Guest2| t)
      (((_=/=_ (|eating2?/1?Bool| t) (|true/0|))
	(|true/0|))))
(rule ((t |Table.TABLE|)) (|guest2/1?Guest2| (|rest3/1?Table| t))
      (|guest2/1?Guest2| t))
(rule nil (|guest3/1?Guest3| (|init-table/0?Table|))
      (|init-guest3/0?Guest3|))
(rule ((t |Table.TABLE|)) (|guest3/1?Guest3| (|pick1r/1?Table| t))
      (|guest3/1?Guest3| t))
(rule ((t |Table.TABLE|)) (|guest3/1?Guest3| (|pick1l/1?Table| t))
      (|guest3/1?Guest3| t))
(rule ((t |Table.TABLE|)) (|guest3/1?Guest3| (|pick2r/1?Table| t))
      (|guest3/1?Guest3| t))
(rule ((t |Table.TABLE|)) (|guest3/1?Guest3| (|pick2l/1?Table| t))
      (|guest3/1?Guest3| t))
(rule ((t |Table.TABLE|)) (|guest3/1?Guest3| (|pick3r/1?Table| t))
      (|pick-right/1?Guest3| (|guest3/1?Guest3| t))
      (((_==_ (|status_?Value| (|chopstick3/1?ChopStick3| t)) (|ready/0?Value|))
	(|true/0|))))
(rule ((t |Table.TABLE|)) (|guest3/1?Guest3| (|pick3r/1?Table| t))
      (|guest3/1?Guest3| t)
      (((_=/=_ (|status_?Value| (|chopstick3/1?ChopStick3| t)) (|ready/0?Value|))
	(|true/0|))))
(rule ((t |Table.TABLE|)) (|guest3/1?Guest3| (|pick3l/1?Table| t))
      (|pick-left/1?Guest3| (|guest3/1?Guest3| t))
      (((_==_ (|status_?Value| (|chopstick2/1?ChopStick2| t)) (|ready/0?Value|))
	(|true/0|))))
(rule ((t |Table.TABLE|)) (|guest3/1?Guest3| (|pick3l/1?Table| t))
      (|guest3/1?Guest3| t)
      (((_=/=_ (|status_?Value| (|chopstick2/1?ChopStick2| t)) (|ready/0?Value|))
	(|true/0|))))
(rule ((t |Table.TABLE|)) (|guest3/1?Guest3| (|rest1/1?Table| t))
      (|guest3/1?Guest3| t))
(rule ((t |Table.TABLE|)) (|guest3/1?Guest3| (|rest2/1?Table| t))
      (|guest3/1?Guest3| t))
(rule ((t |Table.TABLE|)) (|guest3/1?Guest3| (|rest3/1?Table| t))
      (|rest/1?Guest3| (|guest3/1?Guest3| t))
      (((_==_ (|eating3?/1?Bool| t) (|true/0|)) (|true/0|))))
(rule ((t |Table.TABLE|)) (|guest3/1?Guest3| (|rest3/1?Table| t))
      (|guest3/1?Guest3| t)
      (((_=/=_ (|eating3?/1?Bool| t) (|true/0|)) (|true/0|))))
(rule nil (|chopstick1/1?ChopStick1| (|init-table/0?Table|))
      (|init-cs1/0?ChopStick1|))
(rule ((t |Table.TABLE|))
      (|chopstick1/1?ChopStick1| (|pick1r/1?Table| t))
      (|use_?ChopStick1| (|chopstick1/1?ChopStick1| t)))
(rule ((t |Table.TABLE|)) (|chopstick1/1?ChopStick1| (|pick1l/1?Table| t))
      (|chopstick1/1?ChopStick1| t))
(rule ((t |Table.TABLE|)) (|chopstick1/1?ChopStick1| (|pick2r/1?Table| t))
      (|chopstick1/1?ChopStick1| t))
(rule ((t |Table.TABLE|)) (|chopstick1/1?ChopStick1| (|pick2l/1?Table| t))
      (|use_?ChopStick1| (|chopstick1/1?ChopStick1| t)))
(rule ((t |Table.TABLE|)) (|chopstick1/1?ChopStick1| (|pick3r/1?Table| t))
      (|chopstick1/1?ChopStick1| t))
(rule ((t |Table.TABLE|)) (|chopstick1/1?ChopStick1| (|pick3l/1?Table| t))
      (|chopstick1/1?ChopStick1| t))
(rule nil (|chopstick2/1?ChopStick2| (|init-table/0?Table|))
      (|init-cs2/0?ChopStick2|))
(rule ((t |Table.TABLE|)) (|chopstick2/1?ChopStick2| (|pick1r/1?Table| t))
      (|chopstick2/1?ChopStick2| t))
(rule ((t |Table.TABLE|)) (|chopstick2/1?ChopStick2| (|pick1l/1?Table| t))
      (|chopstick2/1?ChopStick2| t))
(rule ((t |Table.TABLE|)) (|chopstick2/1?ChopStick2| (|pick2r/1?Table| t))
      (|use_?ChopStick2| (|chopstick2/1?ChopStick2| t)))
(rule ((t |Table.TABLE|)) (|chopstick2/1?ChopStick2| (|pick2l/1?Table| t))
      (|chopstick2/1?ChopStick2| t))
(rule ((t |Table.TABLE|)) (|chopstick2/1?ChopStick2| (|pick3r/1?Table| t))
      (|chopstick2/1?ChopStick2| t))
(rule ((t |Table.TABLE|)) (|chopstick2/1?ChopStick2| (|pick3l/1?Table| t))
      (|use_?ChopStick2| (|chopstick2/1?ChopStick2| t)))
(rule nil (|chopstick3/1?ChopStick3| (|init-table/0?Table|))
      (|init-cs3/0?ChopStick3|))
(rule ((t |Table.TABLE|)) (|chopstick3/1?ChopStick3| (|pick1r/1?Table| t))
      (|chopstick3/1?ChopStick3| t))
(rule ((t |Table.TABLE|)) (|chopstick3/1?ChopStick3| (|pick1l/1?Table| t))
      (|use_?ChopStick3| (|chopstick3/1?ChopStick3| t)))
(rule ((t |Table.TABLE|)) (|chopstick3/1?ChopStick3| (|pick2r/1?Table| t))
      (|chopstick3/1?ChopStick3| t))
(rule ((t |Table.TABLE|)) (|chopstick3/1?ChopStick3| (|pick2l/1?Table| t))
      (|chopstick3/1?ChopStick3| t))
(rule ((t |Table.TABLE|)) (|chopstick3/1?ChopStick3| (|pick3r/1?Table| t))
      (|use_?ChopStick3| (|chopstick3/1?ChopStick3| t)))
(rule ((t |Table.TABLE|)) (|chopstick3/1?ChopStick3| (|pick3l/1?Table| t))
      (|chopstick3/1?ChopStick3| t))
(rule ((p |Guest3..trs#25.|)) (|eating?/1?Bool| p)
      (|_and_| (_==_ (|status_?Value| (|right-hand/1?RightHand| p))
		     (|filled/0?Value|))
	       (_==_ (|status_?Value| (|left-hand/1?LeftHand| p))
		     (|filled/0?Value|))))
(rule nil (|right-hand/1?RightHand| (|init-guest3/0?Guest3|))
      (|init-rh/0?RightHand|))
(rule ((p |Guest3..trs#25.|)) (|right-hand/1?RightHand| (|pick-right/1?Guest3| p))
      (|pick_?RightHand| (|right-hand/1?RightHand| p)))
(rule ((p |Guest3..trs#25.|)) (|right-hand/1?RightHand| (|pick-left/1?Guest3| p))
      (|right-hand/1?RightHand| p))
(rule ((p |Guest3..trs#25.|)) (|right-hand/1?RightHand| (|rest/1?Guest3| p))
      (|release_?RightHand| (|right-hand/1?RightHand| p)))
(rule nil (|left-hand/1?LeftHand| (|init-guest3/0?Guest3|))
      (|init-lh/0?LeftHand|))
(rule ((p |Guest3..trs#25.|)) (|left-hand/1?LeftHand| (|pick-right/1?Guest3| p))
      (|left-hand/1?LeftHand| p))
(rule ((p |Guest3..trs#25.|)) (|left-hand/1?LeftHand| (|pick-left/1?Guest3| p))
      (|pick_?LeftHand| (|left-hand/1?LeftHand| p)))
(rule ((p |Guest3..trs#25.|)) (|left-hand/1?LeftHand| (|rest/1?Guest3| p))
      (|release_?LeftHand| (|left-hand/1?LeftHand| p)))
(rule nil (|status_?Value| (|init-rh/0?RightHand|))
      (|empty/0?Value|))
(rule ((s |RightHand..trs#23.|)) (|status_?Value| (|pick_?RightHand| s))
      (|filled/0?Value|))
(rule ((s |RightHand..trs#23.|)) (|status_?Value| (|release_?RightHand| s))
      (|empty/0?Value|))
(rule ((|hs1| |RightHand..trs#23.|) (|hs2| |RightHand..trs#23.|))
      (_=*=_ |hs1| |hs2|)
      (|true/0|)
      (((_==_ (|status_?Value| |hs1|) (|status_?Value| |hs2|))
	(|true/0|))))
(rule nil (|not_| (|true/0|)) (|false/0|))
(rule nil (|not_| (|false/0|)) (|true/0|))
(rule ((a |Bool.TRUTH-VALUE|)) (|_and_| (|false/0|) a) (|false/0|))
(rule ((a |Bool.TRUTH-VALUE|)) (|_or_| (|true/0|) a) (|true/0|))
(rule ((a |Bool.TRUTH-VALUE|)) (|_and-also_| (|true/0|) a) a)
(rule ((a |Bool.TRUTH-VALUE|)) (|_and-also_| a (|true/0|)) a)
(rule ((a |Bool.TRUTH-VALUE|)) (|_and-also_| (|false/0|) a) (|false/0|))
(rule ((a |Bool.TRUTH-VALUE|)) (|_and-also_| a (|false/0|)) (|false/0|))
(rule ((a |Bool.TRUTH-VALUE|)) (|_or-else_| (|true/0|) a) (|true/0|))
(rule ((a |Bool.TRUTH-VALUE|)) (|_or-else_| a (|true/0|)) (|true/0|))
(rule ((a |Bool.TRUTH-VALUE|)) (|_or-else_| (|false/0|) a) a)
(rule ((a |Bool.TRUTH-VALUE|)) (|_or-else_| a (|false/0|)) a)
(rule ((a |Bool.TRUTH-VALUE|) (b |Bool.TRUTH-VALUE|))
      (|_implies_| a b) (|_or_| (|not_| a) b))
(rule nil (|_xor_| (|true/0|) (|true/0|)) (|false/0|))
(rule ((x-id |Bool.TRUTH-VALUE|)) (|_xor_| (|false/0|) x-id) x-id)
(rule ((x-id |Bool.TRUTH-VALUE|)) (|_or_| (|false/0|) x-id) x-id)
(rule ((x-id |Bool.TRUTH-VALUE|)) (|_and_| (|true/0|) x-id) x-id)
(rule nil (|status_?Value| (|init-lh/0?LeftHand|)) (|empty/0?Value|))
(rule ((s |LeftHand..trs#19.|)) (|status_?Value| (|pick_?LeftHand| s))
      (|filled/0?Value|))
(rule ((s |LeftHand..trs#19.|)) (|status_?Value| (|release_?LeftHand| s))
      (|empty/0?Value|))
(rule ((|hs1| |LeftHand..trs#19.|) (|hs2| |LeftHand..trs#19.|))
      (_=*=_ |hs1| |hs2|)
      (|true/0|)
      (((_==_ (|status_?Value| |hs1|) (|status_?Value| |hs2|))
	(|true/0|))))
(rule ((p |Guest2..trs#15.|)) (|eating?/1?Bool| p)
      (|_and_| (_==_ (|status_?Value| (|right-hand/1?RightHand| p))
		     (|filled/0?Value|))
	       (_==_ (|status_?Value| (|left-hand/1?LeftHand| p))
		     (|filled/0?Value|))))
(rule nil (|right-hand/1?RightHand| (|init-guest2/0?Guest2|))
      (|init-rh/0?RightHand|))
(rule ((p |Guest2..trs#15.|))
      (|right-hand/1?RightHand| (|pick-right/1?Guest2| p))
      (|pick_?RightHand| (|right-hand/1?RightHand| p)))
(rule ((p |Guest2..trs#15.|)) (|right-hand/1?RightHand| (|pick-left/1?Guest2| p))
      (|right-hand/1?RightHand| p))
(rule ((p |Guest2..trs#15.|)) (|right-hand/1?RightHand| (|rest/1?Guest2| p))
      (|release_?RightHand| (|right-hand/1?RightHand| p)))
(rule nil (|left-hand/1?LeftHand| (|init-guest2/0?Guest2|))
      (|init-lh/0?LeftHand|))
(rule ((p |Guest2..trs#15.|)) (|left-hand/1?LeftHand| (|pick-right/1?Guest2| p))
      (|left-hand/1?LeftHand| p))
(rule ((p |Guest2..trs#15.|)) (|left-hand/1?LeftHand| (|pick-left/1?Guest2| p))
      (|pick_?LeftHand| (|left-hand/1?LeftHand| p)))
(rule ((p |Guest2..trs#15.|)) (|left-hand/1?LeftHand| (|rest/1?Guest2| p))
      (|release_?LeftHand| (|left-hand/1?LeftHand| p)))
(rule ((p |Guest1..trs#13.|)) (|eating?/1?Bool| p)
      (|_and_| (_==_ (|status_?Value| (|right-hand/1?RightHand| p))
		     (|filled/0?Value|))
	       (_==_ (|status_?Value| (|left-hand/1?LeftHand| p))
		     (|filled/0?Value|))))
(rule nil (|right-hand/1?RightHand| (|init-guest1/0?Guest1|))
      (|init-rh/0?RightHand|))
(rule ((p |Guest1..trs#13.|))
      (|right-hand/1?RightHand| (|pick-right/1?Guest1| p))
      (|pick_?RightHand| (|right-hand/1?RightHand| p)))
(rule ((p |Guest1..trs#13.|))
      (|right-hand/1?RightHand| (|pick-left/1?Guest1| p))
      (|right-hand/1?RightHand| p))
(rule ((p |Guest1..trs#13.|)) (|right-hand/1?RightHand| (|rest/1?Guest1| p))
      (|release_?RightHand| (|right-hand/1?RightHand| p)))
(rule nil (|left-hand/1?LeftHand| (|init-guest1/0?Guest1|))
      (|init-lh/0?LeftHand|))
(rule ((p |Guest1..trs#13.|)) (|left-hand/1?LeftHand| (|pick-right/1?Guest1| p))
      (|left-hand/1?LeftHand| p))
(rule ((p |Guest1..trs#13.|)) (|left-hand/1?LeftHand| (|pick-left/1?Guest1| p))
      (|pick_?LeftHand| (|left-hand/1?LeftHand| p)))
(rule ((p |Guest1..trs#13.|)) (|left-hand/1?LeftHand| (|rest/1?Guest1| p))
      (|release_?LeftHand| (|left-hand/1?LeftHand| p)))
(rule nil (|status_?Value| (|init-cs3/0?ChopStick3|)) (|ready/0?Value|))
(rule ((s |ChopStick3..trs#11.|)) (|status_?Value| (|use_?ChopStick3| s))
      (|in-use/0?Value|))
(rule ((s |ChopStick3..trs#11.|)) (|status_?Value| (|release_?ChopStick3| s))
      (|ready/0?Value|))
(rule ((|hs1| |ChopStick3..trs#11.|) (|hs2| |ChopStick3..trs#11.|))
      (_=*=_ |hs1| |hs2|)
      (|true/0|)
      (((_==_ (|status_?Value| |hs1|) (|status_?Value| |hs2|))
	(|true/0|))))
(rule nil (|status_?Value| (|init-cs2/0?ChopStick2|)) (|ready/0?Value|))
(rule ((s |ChopStick2..trs#7.|)) (|status_?Value| (|use_?ChopStick2| s))
      (|in-use/0?Value|))
(rule ((s |ChopStick2..trs#7.|)) (|status_?Value| (|release_?ChopStick2| s))
      (|ready/0?Value|))
(rule ((|hs1| |ChopStick2..trs#7.|) (|hs2| |ChopStick2..trs#7.|))
      (_=*=_ |hs1| |hs2|) (|true/0|)
      (((_==_ (|status_?Value| |hs1|) (|status_?Value| |hs2|))
	(|true/0|))))
(rule nil (|status_?Value| (|init-cs1/0?ChopStick1|))
      (|ready/0?Value|))
(rule ((s |ChopStick1..trs#3.|)) (|status_?Value| (|use_?ChopStick1| s))
      (|in-use/0?Value|))
(rule ((s |ChopStick1..trs#3.|)) (|status_?Value| (|release_?ChopStick1| s))
      (|ready/0?Value|))
(rule ((|hs1| |ChopStick1..trs#3.|) (|hs2| |ChopStick1..trs#3.|))
      (_=*=_ |hs1| |hs2|)
      (|true/0|)
      (((_==_ (|status_?Value| |hs1|) (|status_?Value| |hs2|))
	(|true/0|))))
(rule ((x |?Guest3..trs#26.|) (y |?Guest3..trs#26.|))
      (|!if| (|=/=-aux| x y)) (|true/0|))
(rule ((x |?Guest3..trs#26.|) (y |?Guest3..trs#26.|))
      (|!if| (|==-aux| x y)) (|false/0|))
(rule ((x |?Guest3..trs#26.|) (y |?Guest3..trs#26.|))
      (|=/=-aux| x y) (|false/0|) ((x y)))
(rule ((x |?Guest3..trs#26.|) (y |?Guest3..trs#26.|))
      (_=/=_ x y) (|!if| (|=/=-aux| x y)))
(rule ((x |?Guest3..trs#26.|) (y |?Guest3..trs#26.|))
      (|==-aux| x y) (|true/0|) ((x y)))
(rule ((x |?Guest3..trs#26.|) (y |?Guest3..trs#26.|))
      (|_=b=_| x y) (|!if| (|==-aux| x y)))
(rule ((x |?Guest3..trs#26.|) (y |?Guest3..trs#26.|))
      (_==_ x y) (|!if| (|==-aux| x y)))
(rule ((x |?Guest3..trs#26.|) (y |?Guest3..trs#26.|))
      (|if_then_else_fi| (|false/0|) x y) y)
(rule ((x |?Guest3..trs#26.|) (y |?Guest3..trs#26.|))
      (|if_then_else_fi| (|true/0|) x y) x)
(rule ((x |?RightHand..trs#24.|) (y |?RightHand..trs#24.|))
      (|!if| (|=/=-aux| x y)) (|true/0|))
(rule ((x |?RightHand..trs#24.|) (y |?RightHand..trs#24.|))
      (|!if| (|==-aux| x y)) (|false/0|))
(rule ((x |?RightHand..trs#24.|) (y |?RightHand..trs#24.|))
      (|=/=-aux| x y) (|false/0|) ((x y)))
(rule ((x |?RightHand..trs#24.|) (y |?RightHand..trs#24.|))
      (_=/=_ x y) (|!if| (|=/=-aux| x y)))
(rule ((x |?RightHand..trs#24.|) (y |?RightHand..trs#24.|))
      (|==-aux| x y) (|true/0|) ((x y)))
(rule ((x |?RightHand..trs#24.|) (y |?RightHand..trs#24.|))
      (|_=b=_| x y) (|!if| (|==-aux| x y)))
(rule ((x |?RightHand..trs#24.|) (y |?RightHand..trs#24.|))
      (_==_ x y) (|!if| (|==-aux| x y)))
(rule ((x |?RightHand..trs#24.|) (y |?RightHand..trs#24.|))
      (|if_then_else_fi| (|false/0|) x y) y)
(rule ((x |?RightHand..trs#24.|) (y |?RightHand..trs#24.|))
      (|if_then_else_fi| (|true/0|) x y) x)
(rule ((x |?Value..trs#22.|) (y |?Value..trs#22.|))
      (|!if| (|=/=-aux| x y)) (|true/0|))
(rule ((x |?Value..trs#22.|) (y |?Value..trs#22.|))
      (|!if| (|==-aux| x y)) (|false/0|))
(rule ((x |?Value..trs#22.|) (y |?Value..trs#22.|))
      (|=/=-aux| x y) (|false/0|) ((x y)))
(rule ((x |?Value..trs#22.|) (y |?Value..trs#22.|))
      (_=/=_ x y) (|!if| (|=/=-aux| x y)))
(rule ((x |?Value..trs#22.|) (y |?Value..trs#22.|))
      (|==-aux| x y) (|true/0|) ((x y)))
(rule ((x |?Value..trs#22.|) (y |?Value..trs#22.|))
      (_==_ x y) (|!if| (|==-aux| x y)))
(rule ((x |?Value..trs#22.|) (y |?Value..trs#22.|))
      (|if_then_else_fi| (|false/0|) x y) y)
(rule ((x |?Value..trs#22.|) (y |?Value..trs#22.|))
      (|if_then_else_fi| (|true/0|) x y) x)
(rule ((x |?Bool.TRUTH-VALUE|) (y |?Bool.TRUTH-VALUE|))
      (|!if| (|=/=-aux| x y)) (|true/0|))
(rule ((x |?Bool.TRUTH-VALUE|) (y |?Bool.TRUTH-VALUE|))
      (|!if| (|==-aux| x y)) (|false/0|))
(rule ((x |?Bool.TRUTH-VALUE|) (y |?Bool.TRUTH-VALUE|))
      (|=/=-aux| x y) (|false/0|) ((x y)))
(rule ((x |?Bool.TRUTH-VALUE|) (y |?Bool.TRUTH-VALUE|))
      (_=/=_ x y) (|!if| (|=/=-aux| x y)))
(rule ((x |?Bool.TRUTH-VALUE|) (y |?Bool.TRUTH-VALUE|))
      (|==-aux| x y) (|true/0|) ((x y)))
(rule ((x |?Bool.TRUTH-VALUE|) (y |?Bool.TRUTH-VALUE|))
      (_==_ x y) (|!if| (|==-aux| x y)))
(rule ((x |?Bool.TRUTH-VALUE|) (y |?Bool.TRUTH-VALUE|))
      (|if_then_else_fi| (|false/0|) x y) y)
(rule ((x |?Bool.TRUTH-VALUE|) (y |?Bool.TRUTH-VALUE|))
      (|if_then_else_fi| (|true/0|) x y) x)
(rule ((x |?LeftHand..trs#20.|) (y |?LeftHand..trs#20.|))
      (|!if| (|=/=-aux| x y)) (|true/0|))
(rule ((x |?LeftHand..trs#20.|) (y |?LeftHand..trs#20.|))
      (|!if| (|==-aux| x y)) (|false/0|))
(rule ((x |?LeftHand..trs#20.|) (y |?LeftHand..trs#20.|))
      (|=/=-aux| x y) (|false/0|) ((x y)))
(rule ((x |?LeftHand..trs#20.|) (y |?LeftHand..trs#20.|))
      (_=/=_ x y) (|!if| (|=/=-aux| x y)))
(rule ((x |?LeftHand..trs#20.|) (y |?LeftHand..trs#20.|))
      (|==-aux| x y) (|true/0|) ((x y)))
(rule ((x |?LeftHand..trs#20.|) (y |?LeftHand..trs#20.|))
      (|_=b=_| x y) (|!if| (|==-aux| x y)))
(rule ((x |?LeftHand..trs#20.|) (y |?LeftHand..trs#20.|))
      (_==_ x y) (|!if| (|==-aux| x y)))
(rule ((x |?LeftHand..trs#20.|) (y |?LeftHand..trs#20.|))
      (|if_then_else_fi| (|false/0|) x y) y)
(rule ((x |?LeftHand..trs#20.|) (y |?LeftHand..trs#20.|))
      (|if_then_else_fi| (|true/0|) x y) x)
(rule ((x |?Value..trs#18.|) (y |?Value..trs#18.|))
      (|!if| (|=/=-aux| x y)) (|true/0|))
(rule ((x |?Value..trs#18.|) (y |?Value..trs#18.|))
      (|!if| (|==-aux| x y)) (|false/0|))
(rule ((x |?Value..trs#18.|) (y |?Value..trs#18.|))
      (|=/=-aux| x y) (|false/0|) ((x y)))
(rule ((x |?Value..trs#18.|) (y |?Value..trs#18.|))
      (_=/=_ x y) (|!if| (|=/=-aux| x y)))
(rule ((x |?Value..trs#18.|) (y |?Value..trs#18.|))
      (|==-aux| x y) (|true/0|) ((x y)))
(rule ((x |?Value..trs#18.|) (y |?Value..trs#18.|))
      (_==_ x y) (|!if| (|==-aux| x y)))
(rule ((x |?Value..trs#18.|) (y |?Value..trs#18.|))
      (|if_then_else_fi| (|false/0|) x y) y)
(rule ((x |?Value..trs#18.|) (y |?Value..trs#18.|))
      (|if_then_else_fi| (|true/0|) x y) x)
(rule ((x |?Guest2..trs#16.|) (y |?Guest2..trs#16.|))
      (|!if| (|=/=-aux| x y)) (|true/0|))
(rule ((x |?Guest2..trs#16.|) (y |?Guest2..trs#16.|))
      (|!if| (|==-aux| x y)) (|false/0|))
(rule ((x |?Guest2..trs#16.|) (y |?Guest2..trs#16.|))
      (|=/=-aux| x y) (|false/0|) ((x y)))
(rule ((x |?Guest2..trs#16.|) (y |?Guest2..trs#16.|))
      (_=/=_ x y) (|!if| (|=/=-aux| x y)))
(rule ((x |?Guest2..trs#16.|) (y |?Guest2..trs#16.|))
      (|==-aux| x y) (|true/0|) ((x y)))
(rule ((x |?Guest2..trs#16.|) (y |?Guest2..trs#16.|))
      (|_=b=_| x y) (|!if| (|==-aux| x y)))
(rule ((x |?Guest2..trs#16.|) (y |?Guest2..trs#16.|))
      (_==_ x y) (|!if| (|==-aux| x y)))
(rule ((x |?Guest2..trs#16.|) (y |?Guest2..trs#16.|))
      (|if_then_else_fi| (|false/0|) x y) y)
(rule ((x |?Guest2..trs#16.|) (y |?Guest2..trs#16.|))
      (|if_then_else_fi| (|true/0|) x y) x)
(rule ((x |?Guest1..trs#14.|) (y |?Guest1..trs#14.|))
      (|!if| (|=/=-aux| x y)) (|true/0|))
(rule ((x |?Guest1..trs#14.|) (y |?Guest1..trs#14.|))
      (|!if| (|==-aux| x y)) (|false/0|))
(rule ((x |?Guest1..trs#14.|) (y |?Guest1..trs#14.|))
      (|=/=-aux| x y) (|false/0|) ((x y)))
(rule ((x |?Guest1..trs#14.|) (y |?Guest1..trs#14.|))
      (_=/=_ x y) (|!if| (|=/=-aux| x y)))
(rule ((x |?Guest1..trs#14.|) (y |?Guest1..trs#14.|))
      (|==-aux| x y) (|true/0|) ((x y)))
(rule ((x |?Guest1..trs#14.|) (y |?Guest1..trs#14.|))
      (|_=b=_| x y) (|!if| (|==-aux| x y)))
(rule ((x |?Guest1..trs#14.|) (y |?Guest1..trs#14.|))
      (_==_ x y) (|!if| (|==-aux| x y)))
(rule ((x |?Guest1..trs#14.|) (y |?Guest1..trs#14.|))
      (|if_then_else_fi| (|false/0|) x y) y)
(rule ((x |?Guest1..trs#14.|) (y |?Guest1..trs#14.|))
      (|if_then_else_fi| (|true/0|) x y) x)
(rule ((x |?ChopStick3..trs#12.|) (y |?ChopStick3..trs#12.|))
      (|!if| (|=/=-aux| x y)) (|true/0|))
(rule ((x |?ChopStick3..trs#12.|) (y |?ChopStick3..trs#12.|))
      (|!if| (|==-aux| x y)) (|false/0|))
(rule ((x |?ChopStick3..trs#12.|) (y |?ChopStick3..trs#12.|))
      (|=/=-aux| x y) (|false/0|) ((x y)))
(rule ((x |?ChopStick3..trs#12.|) (y |?ChopStick3..trs#12.|))
      (_=/=_ x y) (|!if| (|=/=-aux| x y)))
(rule ((x |?ChopStick3..trs#12.|) (y |?ChopStick3..trs#12.|))
      (|==-aux| x y) (|true/0|) ((x y)))
(rule ((x |?ChopStick3..trs#12.|) (y |?ChopStick3..trs#12.|))
      (|_=b=_| x y) (|!if| (|==-aux| x y)))
(rule ((x |?ChopStick3..trs#12.|) (y |?ChopStick3..trs#12.|))
      (_==_ x y) (|!if| (|==-aux| x y)))
(rule ((x |?ChopStick3..trs#12.|) (y |?ChopStick3..trs#12.|))
      (|if_then_else_fi| (|false/0|) x y) y)
(rule ((x |?ChopStick3..trs#12.|) (y |?ChopStick3..trs#12.|))
      (|if_then_else_fi| (|true/0|) x y) x)
(rule ((x |?Value..trs#10.|) (y |?Value..trs#10.|))
      (|!if| (|=/=-aux| x y)) (|true/0|))
(rule ((x |?Value..trs#10.|) (y |?Value..trs#10.|))
      (|!if| (|==-aux| x y)) (|false/0|))
(rule ((x |?Value..trs#10.|) (y |?Value..trs#10.|))
      (|=/=-aux| x y) (|false/0|) ((x y)))
(rule ((x |?Value..trs#10.|) (y |?Value..trs#10.|))
      (_=/=_ x y) (|!if| (|=/=-aux| x y)))
(rule ((x |?Value..trs#10.|) (y |?Value..trs#10.|))
      (|==-aux| x y) (|true/0|) ((x y)))
(rule ((x |?Value..trs#10.|) (y |?Value..trs#10.|))
      (_==_ x y) (|!if| (|==-aux| x y)))
(rule ((x |?Value..trs#10.|) (y |?Value..trs#10.|))
      (|if_then_else_fi| (|false/0|) x y) y)
(rule ((x |?Value..trs#10.|) (y |?Value..trs#10.|))
      (|if_then_else_fi| (|true/0|) x y) x)
(rule ((x |?ChopStick2..trs#8.|) (y |?ChopStick2..trs#8.|))
      (|!if| (|=/=-aux| x y)) (|true/0|))
(rule ((x |?ChopStick2..trs#8.|) (y |?ChopStick2..trs#8.|))
      (|!if| (|==-aux| x y)) (|false/0|))
(rule ((x |?ChopStick2..trs#8.|) (y |?ChopStick2..trs#8.|))
      (|=/=-aux| x y) (|false/0|) ((x y)))
(rule ((x |?ChopStick2..trs#8.|) (y |?ChopStick2..trs#8.|))
      (_=/=_ x y) (|!if| (|=/=-aux| x y)))
(rule ((x |?ChopStick2..trs#8.|) (y |?ChopStick2..trs#8.|))
      (|==-aux| x y) (|true/0|) ((x y)))
(rule ((x |?ChopStick2..trs#8.|) (y |?ChopStick2..trs#8.|))
      (|_=b=_| x y) (|!if| (|==-aux| x y)))
(rule ((x |?ChopStick2..trs#8.|) (y |?ChopStick2..trs#8.|))
      (_==_ x y) (|!if| (|==-aux| x y)))
(rule ((x |?ChopStick2..trs#8.|) (y |?ChopStick2..trs#8.|))
      (|if_then_else_fi| (|false/0|) x y) y)
(rule ((x |?ChopStick2..trs#8.|) (y |?ChopStick2..trs#8.|))
      (|if_then_else_fi| (|true/0|) x y) x)
(rule ((x |?Value..trs#6.|) (y |?Value..trs#6.|))
      (|!if| (|=/=-aux| x y)) (|true/0|))
(rule ((x |?Value..trs#6.|) (y |?Value..trs#6.|))
      (|!if| (|==-aux| x y)) (|false/0|))
(rule ((x |?Value..trs#6.|) (y |?Value..trs#6.|))
      (|=/=-aux| x y) (|false/0|) ((x y)))
(rule ((x |?Value..trs#6.|) (y |?Value..trs#6.|))
      (_=/=_ x y) (|!if| (|=/=-aux| x y)))
(rule ((x |?Value..trs#6.|) (y |?Value..trs#6.|))
      (|==-aux| x y) (|true/0|) ((x y)))
(rule ((x |?Value..trs#6.|) (y |?Value..trs#6.|))
      (_==_ x y) (|!if| (|==-aux| x y)))
(rule ((x |?Value..trs#6.|) (y |?Value..trs#6.|))
      (|if_then_else_fi| (|false/0|) x y) y)
(rule ((x |?Value..trs#6.|) (y |?Value..trs#6.|))
      (|if_then_else_fi| (|true/0|) x y) x)
(rule ((x |?ChopStick1..trs#4.|) (y |?ChopStick1..trs#4.|))
      (|!if| (|=/=-aux| x y)) (|true/0|))
(rule ((x |?ChopStick1..trs#4.|) (y |?ChopStick1..trs#4.|))
      (|!if| (|==-aux| x y)) (|false/0|))
(rule ((x |?ChopStick1..trs#4.|) (y |?ChopStick1..trs#4.|))
      (|=/=-aux| x y) (|false/0|) ((x y)))
(rule ((x |?ChopStick1..trs#4.|) (y |?ChopStick1..trs#4.|))
      (_=/=_ x y) (|!if| (|=/=-aux| x y)))
(rule ((x |?ChopStick1..trs#4.|) (y |?ChopStick1..trs#4.|))
      (|==-aux| x y) (|true/0|) ((x y)))
(rule ((x |?ChopStick1..trs#4.|) (y |?ChopStick1..trs#4.|))
      (|_=b=_| x y) (|!if| (|==-aux| x y)))
(rule ((x |?ChopStick1..trs#4.|) (y |?ChopStick1..trs#4.|))
      (_==_ x y) (|!if| (|==-aux| x y)))
(rule ((x |?ChopStick1..trs#4.|) (y |?ChopStick1..trs#4.|))
      (|if_then_else_fi| (|false/0|) x y) y)
(rule ((x |?ChopStick1..trs#4.|) (y |?ChopStick1..trs#4.|))
      (|if_then_else_fi| (|true/0|) x y) x)
(rule ((x |?Value..trs#2.|) (y |?Value..trs#2.|))
      (|!if| (|=/=-aux| x y)) (|true/0|))
(rule ((x |?Value..trs#2.|) (y |?Value..trs#2.|))
      (|!if| (|==-aux| x y)) (|false/0|))
(rule ((x |?Value..trs#2.|) (y |?Value..trs#2.|))
      (|=/=-aux| x y) (|false/0|) ((x y)))
(rule ((x |?Value..trs#2.|) (y |?Value..trs#2.|))
      (_=/=_ x y) (|!if| (|=/=-aux| x y)))
(rule ((x |?Value..trs#2.|) (y |?Value..trs#2.|))
      (|==-aux| x y) (|true/0|) ((x y)))
(rule ((x |?Value..trs#2.|) (y |?Value..trs#2.|))
      (_==_ x y) (|!if| (|==-aux| x y)))
(rule ((x |?Value..trs#2.|) (y |?Value..trs#2.|))
      (|if_then_else_fi| (|false/0|) x y) y)
(rule ((x |?Value..trs#2.|) (y |?Value..trs#2.|))
      (|if_then_else_fi| (|true/0|) x y) x)
(rule ((x |?Table.TABLE|) (y |?Table.TABLE|))
      (|!if| (|=/=-aux| x y)) (|true/0|))
(rule ((x |?Table.TABLE|) (y |?Table.TABLE|))
      (|!if| (|==-aux| x y)) (|false/0|))
(rule ((x |?Table.TABLE|) (y |?Table.TABLE|))
      (|=/=-aux| x y) (|false/0|) ((x y)))
(rule ((x |?Table.TABLE|) (y |?Table.TABLE|))
      (_=/=_ x y) (|!if| (|=/=-aux| x y)))
(rule ((x |?Table.TABLE|) (y |?Table.TABLE|))
      (|==-aux| x y) (|true/0|) ((x y)))
(rule ((x |?Table.TABLE|) (y |?Table.TABLE|))
      (|_=b=_| x y) (|!if| (|==-aux| x y)))
(rule ((x |?Table.TABLE|) (y |?Table.TABLE|))
      (_==_ x y) (|!if| (|==-aux| x y)))
(rule ((x |?Table.TABLE|) (y |?Table.TABLE|))
      (|if_then_else_fi| (|false/0|) x y) y)
(rule ((x |?Table.TABLE|) (y |?Table.TABLE|))
      (|if_then_else_fi| (|true/0|) x y) x)
(rule nil (|!if| (|false/0|)) (|false/0|))
(rule nil (|!if| (|true/0|)) (|true/0|))
(stat on)
(compile)


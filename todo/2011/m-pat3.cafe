mod! TEST1 {
[Bl  < Sequence]

op empty : -> Sequence {constr}
op _,_ : Sequence Sequence -> Sequence {constr assoc id: empty}

var B : Bl .
var SQ : Sequence .

ops b b' : -> Bl .
ops sq sq' : -> Sequence .

eq  sq = b',sq' .
ceq b = B if (B,SQ := sq) and (B = b') .
}

red in TEST1 : sq .
red in TEST1 : b .
-- (b):Bool
-- the expected result is (b'):Bool

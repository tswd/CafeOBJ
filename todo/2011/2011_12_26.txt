-- cafeobj system renovation plan in 2011.7-2016.3

1 Debugging and/or refinement of already existing functions

1.1 improvements of user interactions (user interface)
    ???
1.1.1 GUI is usalbe??
1.1.2 Object database is usable??

1.2 identification of several kinds of objects
     i.e. (mod/param/view/sort/op or eq/trans/beq/btrans) objects
    (documentation, tutorial)
1.2.1 


1.3 reduction command 
1.3.1 memo function
1.3.2 ac reduction

1.4 search command

1.5 module expression
1.5.1 on the fly view definiton
   documentation
   in which occasion is module created internally?

1.5.2 
  make MMM (<modExp1>)
  open <modExp2>
  there is differences between what can be fill into
  <modExp1> and <modExp2>  111215

1.6 congruence checker of _=*=_

1.7 make matching a la Maude (_:=_) available in the condition parts
of conditional equations and rewrite-rules
  {{
  op _occurs-inner_ : [Nat] [NatSeq] -> [Bool] . 
  ceq N:Nat occurs-inner NS:NatSeq = true
      if (NS0:NatSeq N:Nat NS1:NatSeq) := NS:NatSeq .
  -- this conditional equation could also be written as
  eq N:Nat occurs-inner NS0:NatSeq N:Nat NS1:NatSeq = true .
  (Maude Manual pp50-51)
  }}

1.8 lexical analyser and parser

1.8.1 definition of the function of "(" and ")"
  now   "op a((__)): Nat Nat -> Nat 
         parse a((1,2)) ."
  is accepted. 111129

1.8.2 introduction of new self-delimiting symbols
        ":" ";" "@" "#" ... ???

1.8.3 definition of system error sorts 
      ?<Sort> is exactly same to kind 
       that is [Nat] = [NzNat] and ?NAT = ?NzNat


1.9 Built-in BOOL
1.9.1 make the equality (_=_) built-in like the equality (_==_) 

---------

2 Constructions of new features and/or functions

2.1 Correctness checker for proof scores

2.2 supports for complete case analysis
    - proper handling of {constr} attribute of ops 

2.2' supports for induction scheme construction

2.3 meta-function for developing proof scores

2.4 Coordination with other proof assistance and/or model checker
2.4.1 Maude search and/or model-checking functions
2.4.2 SAT (satisfiability checker), SMT (SAT module theory)


---------

3 Documentations (in a broad sense) of 1 and 2

3.1 Preparation of more extensive on-line manual

3.2 Construction of on-line library of examples

3.3 Revision and/or construction of more usable "Users Manual"


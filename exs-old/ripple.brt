(init)
(sort |?SortId.CHAOS:PARSER| |SortId.CHAOS:PARSER|
      |Bool.TRUTH-VALUE| |Prop.PROPC| |?Bus.BUS| |Bus.BUS|
      |?Int.INT-EX| |Int.INT-EX| |Nat.INT-EX|)
(sort-order (|Nat.INT-EX| |Int.INT-EX|)
	    (|Prop.PROPC| |Bus.BUS|)
	    (|Bool.TRUTH-VALUE| |Prop.PROPC|))
(sort-order (|Int.INT-EX| |?Int.INT-EX|)
	    (|Bus.BUS| |?Bus.BUS|)
	    (|SortId.CHAOS:PARSER| |?SortId.CHAOS:PARSER|))
(op |n/0?Int.INT-EX| nil |Nat.INT-EX| nil)
(op |w2/0?Bus.BUS| nil |Bus.BUS| nil)
(op |w1/0?Bus.BUS| nil |Bus.BUS| nil)
(op |b2/0?Bus.BUS| nil |Prop.PROPC| nil)
(op |b1/0?Bus.BUS| nil |Prop.PROPC| nil)
(op |sout*/2?Bus.BUS| (|Bus.BUS| |Bus.BUS|) |Bus.BUS| (1 2 0))
(op |sout/2?Bus.BUS| (|Bus.BUS| |Bus.BUS|) |Prop.PROPC| (1 2 0))
(op |cout/2?Bus.BUS| (|Bus.BUS| |Bus.BUS|) |Prop.PROPC| (1 2 0))
(op |_implies_| (|Bool.TRUTH-VALUE| |Bool.TRUTH-VALUE|)
    |Bool.TRUTH-VALUE| (0 1 2 0) (:r-assoc))
(op |_or-else_| (|Bool.TRUTH-VALUE| |Bool.TRUTH-VALUE|)
    |Bool.TRUTH-VALUE| (1 0 2 0) (:r-assoc))
(op |_and-also_| (|Bool.TRUTH-VALUE| |Bool.TRUTH-VALUE|)
    |Bool.TRUTH-VALUE| (1 0 2 0) (:r-assoc))
(op |Int/0?SortId.CHAOS:PARSER| nil |SortId.CHAOS:PARSER| nil (:constr))
(op |Nat/0?SortId.CHAOS:PARSER| nil |SortId.CHAOS:PARSER| nil (:constr))
(op |2**_?Int.INT-EX| (|Nat.INT-EX|) |Nat.INT-EX| (1 0))
(op |-_?Int.INT-EX| (|Int.INT-EX|) |Int.INT-EX| (1 0))
(op |_-_?Int.INT-EX| (|Int.INT-EX| |Int.INT-EX|) |Int.INT-EX| (0 1 2 0))
(op |_*_?Int.INT-EX| (|Int.INT-EX| |Int.INT-EX|) |Int.INT-EX| (1 2 0)
    (:r-assoc :comm :assoc))
(op |_*_?Int.INT-EX| (|Nat.INT-EX| |Nat.INT-EX|) |Nat.INT-EX| (1 2 0)
    (:r-assoc :comm :assoc))
(op |_+_?Int.INT-EX| (|Int.INT-EX| |Int.INT-EX|) |Int.INT-EX| (1 2 0)
    (:r-assoc :comm :assoc))
(op |_+_?Int.INT-EX| (|Nat.INT-EX| |Nat.INT-EX|) |Nat.INT-EX| (1 2 0)
    (:r-assoc :comm :assoc))
(op |p_?Int.INT-EX| (|Int.INT-EX|) |Int.INT-EX| (1 0))
(op |s_?Int.INT-EX| (|Int.INT-EX|) |Int.INT-EX| (1 0))
(op |s_?Int.INT-EX| (|Nat.INT-EX|) |Nat.INT-EX| (1))
(op |2/0?Int.INT-EX| nil |Nat.INT-EX| (0))
(op |1/0?Int.INT-EX| nil |Nat.INT-EX| (0))
(op |0/0?Int.INT-EX| nil |Nat.INT-EX| nil)
(op |__?Bus.BUS| (|Prop.PROPC| |Bus.BUS|) |Bus.BUS| (1 2))
(op |\|_\|?Int.INT-EX| (|Bus.BUS|) |Nat.INT-EX| (1 0))
(op |Bus/0?SortId.CHAOS:PARSER| nil |SortId.CHAOS:PARSER| nil (:constr))
(op |#_?Int.INT-EX| (|Bus.BUS|) |Int.INT-EX| (1 0))
(op |Prop/0?SortId.CHAOS:PARSER| nil |SortId.CHAOS:PARSER| nil (:constr))
(op |_<->_?Bus.BUS| (|Prop.PROPC| |Prop.PROPC|) |Prop.PROPC| (1 2 0)
    (:r-assoc :assoc))
(op |_->_?Bus.BUS| (|Prop.PROPC| |Prop.PROPC|) |Prop.PROPC| (0 1 2 0))
(op |not_| (|Bool.TRUTH-VALUE|) |Bool.TRUTH-VALUE| (1 0))
(op |not_| (|Prop.PROPC|) |Prop.PROPC| (0 1 0))
(op |_or_| (|Bool.TRUTH-VALUE| |Bool.TRUTH-VALUE|) |Bool.TRUTH-VALUE| (1 2 0)
    (:r-assoc (:id (|false/0|)) :comm :assoc))
(op |_or_| (|Prop.PROPC| |Prop.PROPC|) |Prop.PROPC| (1 2 0)
    (:r-assoc :comm :assoc))
(op |_xor_| (|Bool.TRUTH-VALUE| |Bool.TRUTH-VALUE|) |Bool.TRUTH-VALUE| (1 2 0)
    (:r-assoc (:id (|false/0|)) :comm :assoc))
(op |_xor_| (|Prop.PROPC| |Prop.PROPC|) |Prop.PROPC| (1 2 0)
    (:r-assoc :constr :comm :assoc))
(op |_and_| (|Bool.TRUTH-VALUE| |Bool.TRUTH-VALUE|) |Bool.TRUTH-VALUE| (1 2 0)
    (:r-assoc (:id (|true/0|)) :comm :assoc))
(op |_and_| (|Prop.PROPC| |Prop.PROPC|) |Prop.PROPC| (1 2 0)
    (:r-assoc :constr :comm :assoc))
(op |Bool/0?SortId.CHAOS:PARSER| nil |SortId.CHAOS:PARSER| nil (:constr))
(op |true/0| nil |Bool.TRUTH-VALUE| nil (:constr))
(op |false/0| nil |Bool.TRUTH-VALUE| nil (:constr))
(op |cout/3?Bus.BUS| (|Prop.PROPC| |Prop.PROPC| |Prop.PROPC|) |Prop.PROPC|
    (0 1 2 3))
(op |sout/3?Bus.BUS| (|Prop.PROPC| |Prop.PROPC| |Prop.PROPC|) |Prop.PROPC|
    (0 1 2 3))
(op |sout*/2?Bus.BUS| (|?Bus.BUS| |?Bus.BUS|) |?Bus.BUS| (1 2 0))
(op |sout/2?Bus.BUS| (|?Bus.BUS| |?Bus.BUS|) |?Bus.BUS| (1 2 0))
(op |cout/2?Bus.BUS| (|?Bus.BUS| |?Bus.BUS|) |?Bus.BUS| (1 2 0))
(op |_implies_| (|?Bus.BUS| |?Bus.BUS|) |?Bus.BUS| (1 2 0) (:r-assoc))
(op |_or-else_| (|?Bus.BUS| |?Bus.BUS|) |?Bus.BUS| (1 2 0) (:r-assoc))
(op |_and-also_| (|?Bus.BUS| |?Bus.BUS|) |?Bus.BUS| (1 2 0) (:r-assoc))
(op |2**_?Int.INT-EX| (|?Int.INT-EX|) |?Int.INT-EX| (1 0))
(op |-_?Int.INT-EX| (|?Int.INT-EX|) |?Int.INT-EX| (1 0))
(op |_-_?Int.INT-EX| (|?Int.INT-EX| |?Int.INT-EX|) |?Int.INT-EX| (1 2 0))
(op |_*_?Int.INT-EX| (|?Int.INT-EX| |?Int.INT-EX|) |?Int.INT-EX| (1 2 0)
    (:r-assoc))
(op |_+_?Int.INT-EX| (|?Int.INT-EX| |?Int.INT-EX|) |?Int.INT-EX| (1 2 0)
    (:r-assoc))
(op |p_?Int.INT-EX| (|?Int.INT-EX|) |?Int.INT-EX| (1 0))
(op |s_?Int.INT-EX| (|?Int.INT-EX|) |?Int.INT-EX| (1 0))
(op |__?Bus.BUS| (|?Bus.BUS| |?Bus.BUS|) |?Bus.BUS| (1 2 0))
(op |\|_\|?Int.INT-EX| (|?Bus.BUS|) |?Int.INT-EX| (1 0))
(op |#_?Int.INT-EX| (|?Bus.BUS|) |?Int.INT-EX| (1 0))
(op |_<->_?Bus.BUS| (|?Bus.BUS| |?Bus.BUS|) |?Bus.BUS| (1 2 0) (:r-assoc))
(op |_->_?Bus.BUS| (|?Bus.BUS| |?Bus.BUS|) |?Bus.BUS| (1 2 0))
(op |not_| (|?Bus.BUS|) |?Bus.BUS| (1 0))
(op |_or_| (|?Bus.BUS| |?Bus.BUS|) |?Bus.BUS| (1 2 0) (:r-assoc))
(op |_xor_| (|?Bus.BUS| |?Bus.BUS|) |?Bus.BUS| (1 2 0) (:r-assoc))
(op |_and_| (|?Bus.BUS| |?Bus.BUS|) |?Bus.BUS| (1 2 0) (:r-assoc))
(op |cout/3?Bus.BUS| (|?Bus.BUS| |?Bus.BUS| |?Bus.BUS|) |?Bus.BUS| (0 1 2 3))
(op |sout/3?Bus.BUS| (|?Bus.BUS| |?Bus.BUS| |?Bus.BUS|) |?Bus.BUS| (0 1 2 3))
(op |=/=-aux| (|?SortId.CHAOS:PARSER| |?SortId.CHAOS:PARSER|) |Bool.TRUTH-VALUE|
    (1 2 0))
(op |==-aux| (|?SortId.CHAOS:PARSER| |?SortId.CHAOS:PARSER|) |Bool.TRUTH-VALUE|
    (1 2 0))
(op _=/=_ (|?SortId.CHAOS:PARSER| |?SortId.CHAOS:PARSER|) |Bool.TRUTH-VALUE|
    (1 2 0))
(op _==_ (|?SortId.CHAOS:PARSER| |?SortId.CHAOS:PARSER|) |Bool.TRUTH-VALUE|
    (1 2 0))
(op |_:_| (|?SortId.CHAOS:PARSER| |SortId.CHAOS:PARSER|) |Bool.TRUTH-VALUE|
    (1 2 0))
(op |if_then_else_fi| (|?Bus.BUS| |?SortId.CHAOS:PARSER| |?SortId.CHAOS:PARSER|)
    |?SortId.CHAOS:PARSER| (1 0))
(op |=/=-aux| (|?Bus.BUS| |?Bus.BUS|) |Bool.TRUTH-VALUE| (1 2 0))
(op |==-aux| (|?Bus.BUS| |?Bus.BUS|) |Bool.TRUTH-VALUE| (1 2 0))
(op _=/=_ (|?Bus.BUS| |?Bus.BUS|) |Bool.TRUTH-VALUE| (1 2 0))
(op _==_ (|?Bus.BUS| |?Bus.BUS|) |Bool.TRUTH-VALUE| (1 2 0))
(op |_:_| (|?Bus.BUS| |SortId.CHAOS:PARSER|) |Bool.TRUTH-VALUE| (1 2 0))
(op |if_then_else_fi| (|?Bus.BUS| |?Bus.BUS| |?Bus.BUS|) |?Bus.BUS| (1 0))
(op |=/=-aux| (|?Int.INT-EX| |?Int.INT-EX|) |Bool.TRUTH-VALUE| (1 2 0))
(op |==-aux| (|?Int.INT-EX| |?Int.INT-EX|) |Bool.TRUTH-VALUE| (1 2 0))
(op _=/=_ (|?Int.INT-EX| |?Int.INT-EX|) |Bool.TRUTH-VALUE| (1 2 0))
(op _==_ (|?Int.INT-EX| |?Int.INT-EX|) |Bool.TRUTH-VALUE| (1 2 0))
(op |_:_| (|?Int.INT-EX| |SortId.CHAOS:PARSER|) |Bool.TRUTH-VALUE| (1 2 0))
(op |if_then_else_fi| (|?Bus.BUS| |?Int.INT-EX| |?Int.INT-EX|) |?Int.INT-EX| (1 0))
(op |!if| (|Bool.TRUTH-VALUE|) |Bool.TRUTH-VALUE| (1 0))
(rule nil (|\|_\|?Int.INT-EX| (|w1/0?Bus.BUS|)) (|n/0?Int.INT-EX|))
(rule nil (|\|_\|?Int.INT-EX| (|w2/0?Bus.BUS|)) (|n/0?Int.INT-EX|))
(rule nil
      (|_+_?Int.INT-EX|
       (|#_?Int.INT-EX| (|sout*/2?Bus.BUS| (|w1/0?Bus.BUS|) (|w2/0?Bus.BUS|)))
       (|_*_?Int.INT-EX| (|2**_?Int.INT-EX| (|n/0?Int.INT-EX|))
			 (|#_?Int.INT-EX| (|cout/2?Bus.BUS|
					   (|w1/0?Bus.BUS|)
					   (|w2/0?Bus.BUS|)))))
      (|_+_?Int.INT-EX| (|#_?Int.INT-EX| (|w1/0?Bus.BUS|))
			(|#_?Int.INT-EX| (|w2/0?Bus.BUS|))))
(rule ((b2 |Prop.PROPC|) (b1 |Prop.PROPC|))
      (|#_?Int.INT-EX| (|_and_| b1 b2))
      (|_*_?Int.INT-EX| (|#_?Int.INT-EX| b1) (|#_?Int.INT-EX| b2)))
(rule ((b2 |Prop.PROPC|) (b1 |Prop.PROPC|))
      (|#_?Int.INT-EX| (|_xor_| b1 b2))
      (|_-_?Int.INT-EX|
       (|_+_?Int.INT-EX| (|#_?Int.INT-EX| b1) (|#_?Int.INT-EX| b2))
       (|_*_?Int.INT-EX| (|#_?Int.INT-EX| (|_and_| b1 b2)) (|2/0?Int.INT-EX|))))
(rule ((w2 |Bus.BUS|) (w1 |Bus.BUS|))
      (|\|_\|?Int.INT-EX| (|sout*/2?Bus.BUS| w1 w2))
      (|\|_\|?Int.INT-EX| w1)
      (((_==_ (|\|_\|?Int.INT-EX| w1) (|\|_\|?Int.INT-EX| w2)) (|true/0|))))
(rule ((b2 |Prop.PROPC|) (b1 |Prop.PROPC|))
      (|cout/2?Bus.BUS| b1 b2)
      (|cout/3?Bus.BUS| b1 b2 (|false/0|)))
(rule ((b2 |Prop.PROPC|) (b1 |Prop.PROPC|))
      (|sout/2?Bus.BUS| b1 b2)
      (|sout/3?Bus.BUS| b1 b2 (|false/0|)))
(rule ((b2 |Prop.PROPC|) (w2 |Bus.BUS|) (w1 |Bus.BUS|) (b1 |Prop.PROPC|))
      (|cout/2?Bus.BUS| (|__?Bus.BUS| b1 w1) (|__?Bus.BUS| b2 w2))
      (|cout/3?Bus.BUS| b1 b2 (|cout/2?Bus.BUS| w1 w2)))
(rule ((b2 |Prop.PROPC|) (w2 |Bus.BUS|) (w1 |Bus.BUS|) (b1 |Prop.PROPC|))
      (|sout/2?Bus.BUS| (|__?Bus.BUS| b1 w1) (|__?Bus.BUS| b2 w2))
      (|sout/3?Bus.BUS| b1 b2 (|cout/2?Bus.BUS| w1 w2)))
(rule ((b2 |Prop.PROPC|) (b1 |Prop.PROPC|))
      (|sout*/2?Bus.BUS| b1 b2) (|sout/2?Bus.BUS| b1 b2))
(rule ((b2 |Prop.PROPC|) (w2 |Bus.BUS|) (w1 |Bus.BUS|) (b1 |Prop.PROPC|))
      (|sout*/2?Bus.BUS| (|__?Bus.BUS| b1 w1) (|__?Bus.BUS| b2 w2))
      (|__?Bus.BUS| (|sout/2?Bus.BUS| (|__?Bus.BUS| b1 w1) (|__?Bus.BUS| b2 w2))
		    (|sout*/2?Bus.BUS| w1 w2)))
(rule ((c |Prop.PROPC|) (i2 |Prop.PROPC|) (i1 |Prop.PROPC|))
      (|sout/3?Bus.BUS| i1 i2 c)
      (|_xor_| i1 (|_xor_| i2 c)))
(rule ((c |Prop.PROPC|) (i2 |Prop.PROPC|) (i1 |Prop.PROPC|))
      (|cout/3?Bus.BUS| i1 i2 c)
      (|_xor_| (|_and_| i1 i2) (|_xor_| (|_and_| i1 c) (|_and_| i2 c))))
(rule ((|p| |Prop.PROPC|)) (|_and_| |p| (|false/0|)) (|false/0|))
(rule ((|p| |Prop.PROPC|)) (|_and_| |p| (|true/0|)) |p|)
(rule ((|p| |Prop.PROPC|)) (|_and_| |p| |p|) |p|)
(rule ((|p| |Prop.PROPC|)) (|_xor_| |p| (|false/0|)) |p|)
(rule ((|p| |Prop.PROPC|)) (|_xor_| |p| |p|) (|false/0|))
(rule ((|p| |Prop.PROPC|) (|r| |Prop.PROPC|) (|q| |Prop.PROPC|))
      (|_and_| |p| (|_xor_| |q| |r|))
      (|_xor_| (|_and_| |p| |q|) (|_and_| |p| |r|)))
(rule ((|q| |Prop.PROPC|) (|p| |Prop.PROPC|))
      (|_or_| |p| |q|)
      (|_xor_| (|_and_| |p| |q|) (|_xor_| |p| |q|)))
(rule ((|p| |Prop.PROPC|))
      (|not_| |p|) (|_xor_| |p| (|true/0|)))
(rule ((|q| |Prop.PROPC|) (|p| |Prop.PROPC|))
      (|_->_?Bus.BUS| |p| |q|)
      (|_xor_| (|_and_| |p| |q|) (|_xor_| |p| (|true/0|))))
(rule ((|q| |Prop.PROPC|) (|p| |Prop.PROPC|))
      (|_<->_?Bus.BUS| |p| |q|)
      (|_xor_| |p| (|_xor_| |q| (|true/0|))))
(rule ((b |Prop.PROPC|)) (|\|_\|?Int.INT-EX| b) (|1/0?Int.INT-EX|))
(rule ((w |Bus.BUS|) (b |Prop.PROPC|))
      (|\|_\|?Int.INT-EX| (|__?Bus.BUS| b w))
      (|s_?Int.INT-EX| (|\|_\|?Int.INT-EX| w)))
(rule nil (|#_?Int.INT-EX| (|false/0|)) (|0/0?Int.INT-EX|))
(rule nil (|#_?Int.INT-EX| (|true/0|)) (|1/0?Int.INT-EX|))
(rule ((w |Bus.BUS|) (b |Prop.PROPC|))
      (|#_?Int.INT-EX| (|__?Bus.BUS| b w))
      (|_+_?Int.INT-EX| (|_*_?Int.INT-EX|
			 (|2**_?Int.INT-EX| (|\|_\|?Int.INT-EX| w))
			 (|#_?Int.INT-EX| b))
			(|#_?Int.INT-EX| w)))
(rule nil (|not_| (|true/0|)) (|false/0|))
(rule nil (|not_| (|false/0|)) (|true/0|))
(rule ((a |Bool.TRUTH-VALUE|)) (|_and_| (|false/0|) a) (|false/0|))
(rule ((a |Bool.TRUTH-VALUE|)) (|_or_| (|true/0|) a) (|true/0|))
(rule ((a |Bool.TRUTH-VALUE|)) (|_and-also_| (|true/0|) a) a)
(rule ((a |Bool.TRUTH-VALUE|)) (|_and-also_| a (|true/0|)) a)
(rule ((a |Bool.TRUTH-VALUE|)) (|_and-also_| (|false/0|) a) (|false/0|))
(rule ((a |Bool.TRUTH-VALUE|)) (|_and-also_| a (|false/0|)) (|false/0|))
(rule ((a |Bool.TRUTH-VALUE|)) (|_or-else_| (|true/0|) a) (|true/0|))
(rule ((a |Bool.TRUTH-VALUE|)) (|_or-else_| a (|true/0|)) (|true/0|))
(rule ((a |Bool.TRUTH-VALUE|)) (|_or-else_| (|false/0|) a) a)
(rule ((a |Bool.TRUTH-VALUE|)) (|_or-else_| a (|false/0|)) a)
(rule ((b |Bool.TRUTH-VALUE|) (a |Bool.TRUTH-VALUE|))
      (|_implies_| a b)
      (|_or_| (|not_| a) b))
(rule nil (|_xor_| (|true/0|) (|true/0|)) (|false/0|))
(rule ((x-id |Bool.TRUTH-VALUE|)) (|_xor_| (|false/0|) x-id) x-id)
(rule ((x-id |Bool.TRUTH-VALUE|)) (|_or_| (|false/0|) x-id) x-id)
(rule ((x-id |Bool.TRUTH-VALUE|)) (|_and_| (|true/0|) x-id) x-id)
(rule nil (|1/0?Int.INT-EX|) (|s_?Int.INT-EX| (|0/0?Int.INT-EX|)))
(rule nil (|2/0?Int.INT-EX|) (|s_?Int.INT-EX| (|1/0?Int.INT-EX|)))
(rule ((i |Int.INT-EX|)) (|s_?Int.INT-EX| (|p_?Int.INT-EX| i)) i)
(rule ((i |Int.INT-EX|)) (|p_?Int.INT-EX| (|s_?Int.INT-EX| i)) i)
(rule ((i |Int.INT-EX|)) (|_+_?Int.INT-EX| i (|0/0?Int.INT-EX|)) i)
(rule ((j |Int.INT-EX|) (i |Int.INT-EX|))
      (|_+_?Int.INT-EX| i (|s_?Int.INT-EX| j))
      (|s_?Int.INT-EX| (|_+_?Int.INT-EX| i j)))
(rule ((j |Int.INT-EX|) (i |Int.INT-EX|))
      (|_+_?Int.INT-EX| i (|p_?Int.INT-EX| j))
      (|p_?Int.INT-EX| (|_+_?Int.INT-EX| i j)))
(rule ((i |Int.INT-EX|))
      (|_*_?Int.INT-EX| i (|0/0?Int.INT-EX|)) (|0/0?Int.INT-EX|))
(rule ((j |Int.INT-EX|) (i |Int.INT-EX|))
      (|_*_?Int.INT-EX| i (|s_?Int.INT-EX| j))
      (|_+_?Int.INT-EX| (|_*_?Int.INT-EX| i j) i))
(rule ((j |Int.INT-EX|) (i |Int.INT-EX|))
      (|_*_?Int.INT-EX| i (|p_?Int.INT-EX| j))
      (|_-_?Int.INT-EX| (|_*_?Int.INT-EX| i j) i))
(rule ((i |Int.INT-EX|) (k |Int.INT-EX|) (j |Int.INT-EX|))
      (|_*_?Int.INT-EX| i (|_+_?Int.INT-EX| j k))
      (|_+_?Int.INT-EX| (|_*_?Int.INT-EX| i j) (|_*_?Int.INT-EX| i k)))
(rule nil (|-_?Int.INT-EX| (|0/0?Int.INT-EX|)) (|0/0?Int.INT-EX|))
(rule ((i |Int.INT-EX|)) (|-_?Int.INT-EX| (|-_?Int.INT-EX| i)) i)
(rule ((i |Int.INT-EX|))
      (|-_?Int.INT-EX| (|s_?Int.INT-EX| i))
      (|p_?Int.INT-EX| (|-_?Int.INT-EX| i)))
(rule ((i |Int.INT-EX|))
      (|-_?Int.INT-EX| (|p_?Int.INT-EX| i))
      (|s_?Int.INT-EX| (|-_?Int.INT-EX| i)))
(rule ((j |Int.INT-EX|) (i |Int.INT-EX|))
      (|_-_?Int.INT-EX| i j)
      (|_+_?Int.INT-EX| i (|-_?Int.INT-EX| j)))
(rule ((i |Int.INT-EX|))
      (|_+_?Int.INT-EX| (|-_?Int.INT-EX| i) i)
      (|0/0?Int.INT-EX|))
(rule ((j |Int.INT-EX|) (i |Int.INT-EX|))
      (|-_?Int.INT-EX| (|_+_?Int.INT-EX| i j))
      (|_-_?Int.INT-EX| (|-_?Int.INT-EX| i) j))
(rule ((j |Int.INT-EX|) (i |Int.INT-EX|))
      (|_*_?Int.INT-EX| i (|-_?Int.INT-EX| j))
      (|-_?Int.INT-EX| (|_*_?Int.INT-EX| i j)))
(rule nil (|2**_?Int.INT-EX| (|0/0?Int.INT-EX|)) (|1/0?Int.INT-EX|))
(rule ((n |Nat.INT-EX|))
      (|2**_?Int.INT-EX| (|s_?Int.INT-EX| n))
      (|_*_?Int.INT-EX| (|2**_?Int.INT-EX| n) (|2/0?Int.INT-EX|)))
(rule ((x |Bool.TRUTH-VALUE|))
      (|_:_| x (|Bool/0?SortId.CHAOS:PARSER|)) (|true/0|))
(rule ((x |Prop.PROPC|))
      (|_:_| x (|Prop/0?SortId.CHAOS:PARSER|)) (|true/0|))
(rule ((x |Bus.BUS|))
      (|_:_| x (|Bus/0?SortId.CHAOS:PARSER|)) (|true/0|))
(rule ((x |Int.INT-EX|))
      (|_:_| x (|Int/0?SortId.CHAOS:PARSER|)) (|true/0|))
(rule ((x |Nat.INT-EX|))
      (|_:_| x (|Nat/0?SortId.CHAOS:PARSER|)) (|true/0|))
(rule ((x |?SortId.CHAOS:PARSER|) (y |?SortId.CHAOS:PARSER|))
      (|!if| (|=/=-aux| x y)) (|true/0|))
(rule ((x |?SortId.CHAOS:PARSER|) (y |?SortId.CHAOS:PARSER|))
      (|!if| (|==-aux| x y)) (|false/0|))
(rule ((x |?SortId.CHAOS:PARSER|) (y |?SortId.CHAOS:PARSER|))
      (|=/=-aux| x y) (|false/0|) ((x y)))
(rule ((x |?SortId.CHAOS:PARSER|) (y |?SortId.CHAOS:PARSER|))
      (_=/=_ x y) (|!if| (|=/=-aux| x y)))
(rule ((x |?SortId.CHAOS:PARSER|) (y |?SortId.CHAOS:PARSER|))
      (|==-aux| x y) (|true/0|) ((x y)))
(rule ((x |?SortId.CHAOS:PARSER|) (y |?SortId.CHAOS:PARSER|))
      (_==_ x y) (|!if| (|==-aux| x y)))
(rule ((x |?SortId.CHAOS:PARSER|) (y |?SortId.CHAOS:PARSER|))
      (|if_then_else_fi| (|false/0|) x y) y)
(rule ((x |?SortId.CHAOS:PARSER|) (y |?SortId.CHAOS:PARSER|))
      (|if_then_else_fi| (|true/0|) x y) x)
(rule ((x |?Bus.BUS|) (y |?Bus.BUS|)) (|!if| (|=/=-aux| x y)) (|true/0|))
(rule ((x |?Bus.BUS|) (y |?Bus.BUS|)) (|!if| (|==-aux| x y)) (|false/0|))
(rule ((x |?Bus.BUS|) (y |?Bus.BUS|)) (|=/=-aux| x y) (|false/0|) ((x y)))
(rule ((x |?Bus.BUS|) (y |?Bus.BUS|)) (_=/=_ x y) (|!if| (|=/=-aux| x y)))
(rule ((x |?Bus.BUS|) (y |?Bus.BUS|)) (|==-aux| x y) (|true/0|) ((x y)))
(rule ((x |?Bus.BUS|) (y |?Bus.BUS|)) (_==_ x y) (|!if| (|==-aux| x y)))
(rule ((x |?Bus.BUS|) (y |?Bus.BUS|)) (|if_then_else_fi| (|false/0|) x y) y)
(rule ((x |?Bus.BUS|) (y |?Bus.BUS|)) (|if_then_else_fi| (|true/0|) x y) x)
(rule ((x |?Int.INT-EX|) (y |?Int.INT-EX|)) (|!if| (|=/=-aux| x y)) (|true/0|))
(rule ((x |?Int.INT-EX|) (y |?Int.INT-EX|)) (|!if| (|==-aux| x y)) (|false/0|))
(rule ((x |?Int.INT-EX|) (y |?Int.INT-EX|)) (|=/=-aux| x y) (|false/0|) ((x y)))
(rule ((x |?Int.INT-EX|) (y |?Int.INT-EX|)) (_=/=_ x y) (|!if| (|=/=-aux| x y)))
(rule ((x |?Int.INT-EX|) (y |?Int.INT-EX|)) (|==-aux| x y) (|true/0|) ((x y)))
(rule ((x |?Int.INT-EX|) (y |?Int.INT-EX|)) (_==_ x y) (|!if| (|==-aux| x y)))
(rule ((x |?Int.INT-EX|) (y |?Int.INT-EX|)) (|if_then_else_fi| (|false/0|) x y) y)
(rule ((x |?Int.INT-EX|) (y |?Int.INT-EX|)) (|if_then_else_fi| (|true/0|) x y) x)
(rule nil (|!if| (|false/0|)) (|false/0|))
(rule nil (|!if| (|true/0|)) (|true/0|))
(stat on)
(compile)
(reduce (|#_?Int.INT-EX| (|__?Bus.BUS| (|b1/0?Bus.BUS|) (|w1/0?Bus.BUS|))))

